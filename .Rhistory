# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
#stat_sum(aes(size = ..n.., group = 1), position = "jitter",shape = 21) +
geom_jitter(aes(size = ..n.., group = 1),shape = 21, width = .25)+
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", width = .25, shape = 21) +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_overall.png", res=300, height=10, width=7, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(season))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
#modeling ----
ex.dat.long.prox <- ex.dat.long %>%
drop_na(proximity.km)
aicu.0 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
aicu.1 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km,
family = "binomial")
summary(aicu.1)
vif(aicu.1)
library(car)
library(car)
vif(aicu.1)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F, k = log(n))
library(readxl)
library(MASS)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(aod)
library(wesanderson)
library(car)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F, k = log(n))
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
summary(aicu.2) #no significant community effect
vif(aicu.2)
# estimate the model and store results in m
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
require(ggplot2)
require(GGally)
library(readxl)
library(MASS)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(aod)
library(wesanderson)
library(car)
library(GGally)
library(reshape2)
library(lme4)
library(compiler)
library(parallel)
library(boot)
library(lattice)
# estimate the model and store results in m
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|commmunity:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.0)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.0)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.1)
#get confidence intervals for estimates
se <- sqrt(diag(vcov(aicumm.1)))
# table of estimates with 95% CI
(tab <- cbind(Est = fixef(aicumm.1), LL = fixef(aicumm.1) - 1.96 * se, UL = fixef(aicumm.1) + 1.96 *
se))
exp(tab)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
aicumm.2 <- stepAIC(aicumm.0,scope = list(upper=aicumm.1), direction="both",test="Chisq", trace = F)
aicumm.2 <- step(aicumm.0,scope = list(upper=aicumm.1), direction="both",test="Chisq", trace = F)
aicumm.2 <- step(aicumm.1, direction="both", trace = F)
aicumm.2 <- stepAIC(aicumm.1, direction="both", trace = F)
aicumm.2 <- stepAIC(aicumm.1, direction="both", trace = F,
data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",])
anova(aicumm.1)
aod(aicumm.1)
#summary ----
#name subset columns
cols <- c("standard", "analyte")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_overall.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "season")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_ssn.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "community")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_com.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "site")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
view(sumtable)
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_site.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "community")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_com.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "season")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_ssn.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_overall.csv")
##copper----
#null model
aicu.0 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
#maximal model
aicu.1 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km,
family = "binomial")
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
summary(aicu.2) #no significant community effect
stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
aicu.2 <- step(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
step(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = T)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both", trace = T)
summary(aicu.2) #no significant community effect
