plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_hayden, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.hw, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.hw, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Smelter (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
dev.print(png, "PLI_HWdisteffectln.png", res=300, height=6, width=8, units="in")
#pli globe modeling ----
pli_globe<- globedat
pli_globe<- pli_globe%>%
drop_na(prox.normal)
pli_globe<- pli_globe%>%
drop_na(pli.ln)
pli_globe<-pli_globe%>%
drop_na(season)
pli_globe<-pli_globe%>%
drop_na(pH)
plg0 <- lmer(data =pli_globe,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(plg0)
plg <- lmer(data = pli_globe,
pli.ln ~  season + prox.normal+pH+ season:prox.normal+pH:prox.normal+ location_2+ location__2:season+
+ (1|community:site),
REML = F) #ML for comparison, REML for final
summary(plg)
plg.step <- step(plg)
plg.step
plg <- lmer(data = pli_globe,
pli.ln ~  season + prox.normal+pH+ season:prox.normal+pH:prox.normal+ location_2+ location__2:season+
+ (1|community:site),
REML = F) #ML for comparison, REML for final
plg <- lmer(data = pli_globe,
pli.ln ~  season + prox.normal+pH+ season:prox.normal+pH:prox.normal+ location_2+ location_2:season+
+ (1|community:site),
REML = F) #ML for comparison, REML for final
summary(plg)
plg.step <- step(plg)
plg.step
plg2 <- get_model(plg.step)
print(summary(plg2))
check_model(plg2)
anova(plg2)
print(anova(plg2))
performance(plg2)
plg <- lmer(data = pli_globe,
pli.ln ~  season + prox.normal+pH+ season:prox.normal+pH:prox.normal+ location_2+
+ (1|community:site),
REML = F) #ML for comparison, REML for final
summary(plg)
plg.step <- step(plg)
plg.step
plg2 <- get_model(plg.step)
print(summary(plg2))
check_model(plg2)
anova(plg2)
print(anova(plg2))
performance(plg2)
print(summary(plg2))
#globeeffect plot====
predict.dat.gm <- ggeffect(model = plg2,
terms = c("prox.normal"),
back.transform = F,
type = "re")
#globeeffect plot====
predict.dat.gm <- ggeffect(model = plg2,
terms = c("prox.normal"),
back.transform = F,
type = "re")
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mne (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
facet_grid(season ~ .) +
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln)) +
geom_point() +
geom_ribbon(data = predict.dat.gm, mapping = aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), alpha = .5, fill = "#95CACA") +
geom_line(data = predict.dat.gm, mapping = aes(x = x, y = predicted)) +
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)") +
theme_bw() +
facet_grid(season ~ .) +
theme(
text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none",
panel.background = element_rect(fill = "darkblue")  # Change the facet background color
)
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
facet_grid(season ~ .) +
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln)) +
geom_point() +
geom_ribbon(data = predict.dat.gm, mapping = aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), alpha = .5, fill = "#95CACA") +
geom_line(data = predict.dat.gm, mapping = aes(x = x, y = predicted)) +
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)") +
theme_bw() +
facet_grid(season ~ .) +
theme(
text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none",
strip.text = element_text(color = "red")  # Change the facet label text color
)
ggplot(data = pli_globe, aes(x = prox.normal, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
facet_grid(season ~ .) +
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
dev.print(png, "PLI_GMdisteffectln.png", res=300, height=6, width=8, units="in")
#Q67====
#Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)?
pli_tucson67 <- full_join(tucsondat, hds67, by = c("site"))
pli_tucson67 <- pli_tucson67 %>%
drop_na(prox.normal)
pli_tucson67 <- pli_tucson67 %>%
drop_na(season)
pli_tucson67 <- pli_tucson67 %>%
drop_na(Q67)
pli_tucson67$Q67<- as.factor(pli_tucson67$Q67)
summary(pli_tucson67$Q67)
tuc0<- lmer(data = pli_tucson67,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(tuc0)
tuc1<- lmer(data= pli_tucson67,
pli.ln~ season+ prox.normal+ Q67+ ward+ prox.normal:season+ pH+ ward:Q67+
(1|community:site),
REML = F) #ML for comparison, REML for final
tuc.step <- step(tuc1, direction= "both")
tuc.step
tuc2 <- get_model(tuc.step)
print(summary(tuc2))
check_model(tuc2)
vif(tuc2)
anova(tuc2)
print(anova(tuc2))
performance(tuc2)
#tucson hds plot====
predict.dat.gm <- ggeffect(model = tuc2,
terms = c("prox.normal"),
back.transform = F,
type = "re")
#tucson hds plot====
predict.dat.gm <- ggeffect(model = tuc2,
terms = c("Q67"),
back.transform = F,
type = "re")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
facet_grid(season ~ .) +
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_boxplot()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
#tucson hds plot====
predict.dat.gm <- ggeffect(model = tuc2,
terms = c("Q67"),
back.transform = F,
type = "re")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
y = "ln(PLI)\n",
x = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.gm, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.gm, mapping = aes(x=x, y = predicted))+
labs(title = "",
x = "Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)?\n",
y = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
#tucson hds plot====
predict.dat.tu3 <- ggeffect(model = tuc2,
terms = c("Q67"),
back.transform = F,
type = "re")
ggplot(data = pli_tucson67, aes(x = Q67, y = pli.ln))+
geom_point()+
geom_ribbon(data = predict.dat.tu3, mapping = aes(x=x, y = predicted, ymin = conf.low, ymax =conf.high), alpha = .5, fill = "#95CACA")+ #adds shading for error
geom_line(data = predict.dat.tu3, mapping = aes(x=x, y = predicted))+
labs(title = "",
x = "Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)?\n",
y = "\n Normalized Distance From Mine (km)")+
theme_bw()+
theme(text = element_text(family = "Avenir", size = 13),
panel.grid = element_blank(),
plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none")
dev.print(png, "PLI_HDSTUQ67effectln.png", res=300, height=6, width=8, units="in")
#Q67====
#Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)?
globe<-full_join(globedat, hds67, by = c("site"))
globe <- globe%>%
drop_na(prox.normal)
globe<- globe%>%
drop_na(season)
globe<- globe%>%
drop_na(Q67)
globe$Q67<- as.factor(globe$Q67)
summary(globe$Q67)
globea <- lmer(data = globe,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globea)
globe<- globe%>%
drop_na(Q67)
globe$Q67<- as.factor(globe$Q67)
summary(globe$Q67)
globea <- lmer(data = globe,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globea)
globe67<- lmer(data= globe,
pli.ln~ season+ prox.normal+ Q67+ prox.normal:season+ pH+location_2+location_2:Q67+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe67)
globe67c<- lmer(data= globe,
pli.ln~ season+ prox.normal+ Q67+ prox.normal:season+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe67c)
globe.step<- step(globe67c)
globe.step
globe2 <- get_model(globe.step)
globe2
print(summary(globe2))
#Q79====
globe79<-full_join(globedat, hds79, by = c("site"))
globe79 <- globe79%>%
drop_na(prox.normal)
globe79<- globe79%>%
drop_na(season)
globe79<- globe79%>%
drop_na(Q79)
globe79$Q79<- as.factor(globe79$Q79)
globe <- lmer(data = globe79,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globe)
globe79b<- lmer(data=globe79,
pli.ln~  prox.normal+ Q79+ prox.normal:season+ pH+ location_2:Q79+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe79b)
globe.step <- step(globe79b)
globe.step
globe2 <- get_model(globe.step)
check_model(globe2)
vif(globe2)
anova(globe2)
print(anova(globe2))
print(summary(globe2))
performance(globe2)
print(anova(globe2))
#Q79====
globe79<-full_join(globedat, hds79, by = c("site"))
globe79 <- globe79%>%
drop_na(prox.normal)
globe79<- globe79%>%
drop_na(season)
globe79<- globe79%>%
drop_na(Q79)
globe79$Q79<- as.factor(globe79$Q79)
globe <- lmer(data = globe79,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globe)
globe79b<- lmer(data=globe79,
pli.ln~  prox.normal+ Q79+ prox.normal:season+ pH+ location_2:Q79+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe79b)
globe.step <- step(globe79b)
globe.step
globe2 <- get_model(globe.step)
check_model(globe2)
vif(globe2)
anova(globe2)
print(anova(globe2))
print(summary(globe2))
performance(globe2)
#tucson hds plot====
predict.dat.gm3 <- ggeffect(model = globe2,
terms = c("Q79"),
back.transform = F,
type = "re")
#Q79====
globe79<-full_join(globedat, hds79, by = c("site"))
globe79 <- globe79%>%
drop_na(prox.normal)
globe79<- globe79%>%
drop_na(season)
globe79<- globe79%>%
drop_na(Q79)
globe79$Q79<- as.factor(globe79$Q79)
globe <- lmer(data = globe79,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globe)
globe79b<- lmer(data=globe79,
pli.ln~  prox.normal+ Q79+ prox.normal:season+ pH+ location_2:Q79+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe79b)
globe.step <- step(globe79b)
globe.step
globe79c <- get_model(globe.step)
check_model(globe79c)
vif(globe79c)
anova(globe79c)
print(anova(globe79c))
print(summary(globe79c))
performance(globe79c)
#tucson hds plot====
predict.dat.gm3 <- ggeffect(model = globe79c,
terms = c("Q79"),
back.transform = F,
type = "re")
print(summary(globe79c))
print(anova(globe79c))
#tucson hds plot====
predict.dat.gm3 <- ggeffect(model = globe79c,
terms = c("Q79:location_2"),
back.transform = F,
type = "re")
#tucson hds plot====
predict.dat.gm3 <- ggeffect(model = globe79c,
terms = c("location_2"),
back.transform = F,
type = "re")
#tucson hds plot====
predict.dat.gm3 <- ggeffect(model = globe79c,
terms = c("Q79"),
back.transform = F,
type = "re")
predict.dat.gm3 <- ggpredict(model = globe79c,
terms = "Q79")
# Assuming you have the 'effects' package installed
# If not, install it using install.packages("effects")
library(effects)
predict.dat.gm3 <- Effect(term = "Q79", model = globe79c)
predict.dat.gm3 <- Effect(term = "Q79", model = globe79c)
predict.dat.gm3 <- ggpredict(model = globe79c, terms = c("Q79", "other_terms"))
print(anova(globe79c))
predict.dat.gm3 <- ggpredict(model = globe79c, terms = c("Q79", "location_2"))
print(summary(globe79c))
#Q77====
#Does your cistern have a screen/filter for incoming water from down spout on top of the tank?
globe77<-full_join(globedat, hds77, by = c("site"))
globe77 <- globe77%>%
drop_na(prox.normal)
globe77<- globe77%>%
drop_na(season)
globe77<- globe77%>%
drop_na(Q77)
globe77$Q77<- as.factor(globe77$Q77)
summary(globe77$Q77)
globe <- lmer(data = globe77,
pli.ln ~ (1|community:site),
REML = T) #ML for comparison, REML for final
summary(globe)
globe77b<- lmer(data= globe77,
pli.ln~ season+ prox.normal+ Q77+ prox.normal:season+ pH+location_2:Q77+
(1|community:site),
REML = F) #ML for comparison, REML for final
summary(globe77b)
anova(globe77b)
vif(globe77b)
globe2<- lmer(data= globe77,
pli.ln~ season+ Q77+ prox.normal:season+
(1|community:site),
REML = F) #ML for comparison, REML for final
print(summary(globe2))
check_model(globe2)
vif(globe2)
print(anova(globe2))
print(summary(globe2))
performance(globe2)
#tucson hds plot====
predict.dat.gl <- ggeffect(model = globe79c,
terms = c("Q79"),
back.transform = F,
type = "re")
marginal_effects <- ggpredict(globe79c, terms = c("Q79", "prox.normal", "Q79:season"))
globe79c <- get_model(globe.step)
check_model(globe79c)
vif(globe79c)
anova(globe79c)
marginal_effects <- ggpredict(globe79c, terms = c("Q79", "pH", "Q79:location_2"))
marginal_effects <- ggpredict(globe79c, terms = c("Q79", "pH"))
