#
# iw.dm.detects[iw.dm.detects$season=="First Winter",]$season <- "Winter"
# iw.dm.detects[iw.dm.detects$season=="Last Winter",]$season <- "Winter"
# iw.dm.detects[iw.dm.detects$season=="First Monsoon",]$season <- "Monsoon"
# iw.dm.detects[iw.dm.detects$season=="Last Monsoon",]$season <- "Monsoon"
#
#
# #changing year
# iw.dm.detects$year<-iw.dm.detects$sampling_year
#
# iw.dm.detects[iw.dm.detects$sampling_year=="2017-2018",]$sampling_year <- "Water Year 1"
# iw.dm.detects[iw.dm.detects$sampling_year=="2018-2019",]$sampling_year <- "Water Year 2"
# iw.dm.detects[iw.dm.detects$sampling_year=="2019-2020",]$sampling_year <- "Water Year 3"
#
# #remove year 3 monsoon samples
# iw.dm.detects$ssnyear <- paste(iw.dm.detects$season, iw.dm.detects$sampling_year)
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$ssnyear!="Monsoon Water Year 3", ]
#
# #remove field blanks. to remove anything, type !="Value" to remove them.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$type!="B", ]
#
#
# #remove ATS samples because ATS samples are not included in PH research.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$site!="ATS1", ]
#
# #confirm correct order of categorical variables
# #iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("FW", "LW", "FM", "LM"))
# iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
# iw.dm.detects$period <- factor(iw.dm.detects$period, levels = c("First", "Last"))
# iw.dm.detects$season <- factor(iw.dm.detects$season, levels = c("Winter", "Monsoon"))
# iw.dm.detects$sampling_year <- factor(iw.dm.detects$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
# iw.dm.detects$community <- factor(iw.dm.detects$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
#
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
iw.dm <- iw.dm[-c(19,39),]
iw.dm <- iw.dm[iw.dm$site!="H222",]
#contamination factor=====
pli_dat<- pli[-c(19,39),]
pli_dat <- pli_dat[pli_dat$site!="H222",]
pli_short<-  pli_dat[, -c(15, 19, 25, 26, 28, 29)]
pli_dat2<- pivot_longer(pli_short,
cols = Be:Pb,
values_to = "contamination_factor",
names_to = "analytes")
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
#calculate natural log ----
iw.dm.long$ln_value <- log(iw.dm.long$value)
#create longer version to compare transformation
iw.dm.longer <- pivot_longer(data = iw.dm.long,
cols = c(value,ln_value),
names_to = "transformation",
values_to = "concentration")
iw.dm.longer[iw.dm.longer$transformation == "value",]$transformation <- "untransformed"
iw.dm.longer[iw.dm.longer$transformation == "ln_value",]$transformation <- "natural log"
iw.dm.longer$transformation <- as.factor(iw.dm.longer$transformation)
#create natural log dataframes for analysis
iw.ln.dm.long <- subset(iw.dm.long, select = -c(value))
iw.ln.dm <- pivot_wider(data = iw.ln.dm.long,
values_from = "ln_value",
names_from ="analyte")
#Home description survey ----
hds <- read_excel("/Users/gift/Documents/GitHub/WorkingFiles/data/data_processing/IO_HDS.xlsx")
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "0"
hds[hds$Q67=="0",]$Q67 <- "0"
hds[hds$Q67=="1",]$Q67 <- "1"
hds[hds$Q67=="2",]$Q67 <- "0"
hds$Q67 <- as.numeric(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "0"
hds[hds$Q71=="0",]$Q71 <- "0"
hds[hds$Q71=="1",]$Q71 <- "1"
hds[hds$Q71=="2",]$Q71 <- "0"
hds$Q71 <- as.numeric(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "0"
hds[hds$Q76=="0",]$Q76 <- "0"
hds[hds$Q76=="1",]$Q76 <- "1"
hds[hds$Q76=="2",]$Q76 <- "0"
hds[hds$Q76=="3",]$Q76 <- "0"
hds$Q76 <- as.numeric(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "0"
hds[hds$Q77=="0",]$Q77 <- "0"
hds[hds$Q77=="1",]$Q77 <- "1"
hds[hds$Q77=="2",]$Q77 <- "0"
hds[hds$Q77=="3",]$Q77 <- "0"
hds$Q77 <- as.numeric(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "0"
hds[hds$Q79=="0",]$Q79 <- "0"
hds[hds$Q79=="1",]$Q79 <- "0"
hds[hds$Q79=="2",]$Q79 <- "1"
hds[hds$Q79=="100",]$Q79 <- "0"
hds$Q79 <- as.numeric(hds$Q79)
summary(hds$Q79)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds$score <- as.character(hds$score)
hds[hds$score=="4",]$score <- "4-5"
hds[hds$score=="5",]$score <- "4-5"
hds$score <- as.factor(hds$score)
summary(hds$score)
iw.score <- full_join(iw.dm, hds, by = c("site"))
iw.score <- iw.score[!is.na(iw.score$score),]
iw.score <- iw.score[!is.na(iw.score$community),]
#load libraries ----
#base
library(readxl) #read excel files
library(tidyverse)
library(ggplot2)
#models
library(EnvStats)
library(lme4)
library(lmerTest)
library(ggeffects)
library(performance)
library(effects)
library(ggpubr)
library(emmeans)
library(multcomp)
library(car)
view(iw.score)
#data formatting----
#iw.score contains samples with homes that had at least one response to the home description survey. if not all 5 questions were answered, a value of 0 was automatically assigned as a conservative assumption of behavior
#view(iw.score)
iw.score.long <- pivot_longer(data = iw.score,
cols = Be:Pb,
values_to = "concentration",
names_to = "analyte")
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintainence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintainance score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
library(wesanderson)
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintainence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintainance score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintainence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintainance score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintainence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintainance score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5, hjust = 1),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintenence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintenence score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5, hjust = 1),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "maintainencescore_analyte.png", res=300, height=10, width=12, units="in")
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintenence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintenence score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "maintainencescore_analyte.png", res=300, height=10, width=12, units="in")
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score, fill = score)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~community, scales = "free") +
labs(x = "\nMaintenence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintenence score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
#functions ----
sumFX <- function(datalongDF, subset.vector.string, value.string, dfname.string, filename.string){
#load libraries
library(tidyverse)
library(EnvStats)
#assign data
dat.long <- datalongDF
cols <- subset.vector.string
value <- value.string
dfname <- dfname.string
filename <- filename.string
#calculate summary stats
sumtable <- dat.long %>%
group_by(across(all_of(cols))) %>%
summarize(n = n(),
min = min(.data[[value]]),
max = max(.data[[value]]),
median = median(.data[[value]]),
mean = mean(.data[[value]]),
sd = sd(.data[[value]])
,
gmean = geoMean(.data[[value]]),
gsd = geoSD(.data[[value]])
)
#make longer
sum.long <- pivot_longer(data = sumtable,
cols = n:gsd,
values_to = "value",
names_to = "stat",
values_drop_na = T)
#sig figs
sum.long$value <- formatC(signif(as.numeric(sum.long$value),digits=3), digits=3,format="fg", flag="#")
sum.long$value <- as.numeric(sum.long$value)
#widen
sum.wide <- pivot_wider(data = sum.long,
names_from = stat, #change out as needed
values_from = value)
#sig figs messes up count for some reason, add from original
sum.wide$n <- sumtable$n
#save as csv file in your working directory
write.csv(sum.wide, paste(filename,"_sum.csv", sep = ""))
#copy to new dataframe with a unique name and place in global environment
assign(paste(dfname), sum.wide, envir=.GlobalEnv)
# #return the dataframe by character string
# return(get(dfname))
}
#summary ----
##project ----
sumFX(datalongDF = iw.score.long,
subset.vector.string = c("analyte", "score"),
value.string = "concentration",
dfname.string = "sum.score",
filename.string = "score")
View(sum.score)
zn.0 <- lm(data = iw.score,
log(Zn) ~ score + community + season + proximity.km)
summary(zn.0)
check_model(zn.0)
performance(zn.0)
anova(zn.0)
al.0 <- lm(data = iw.score,
log(Al) ~ score + community + season + proximity.km)
summary(al.0)
check_model(al.0)
performance(al.0)
anova(al.0)
cu.0 <- lm(data = iw.score,
log(Al) ~ score + community + season + proximity.km)
summary(cu.0)
check_model(cu.0)
performance(cu.0)
anova(cu.0)
plot(allEffects(zn.0))
anova(zn.0)
anova(al.0) #score signif
plot(allEffects(al.0))
anova(cu.0) #score signif
plot(allEffects(cu.0))
cu.0 <- lm(data = iw.score,
log(Cu) ~ score + community + season + proximity.km)
summary(cu.0)
check_model(cu.0)
performance(cu.0)
anova(cu.0) #score signif
plot(allEffects(cu.0))
pb.0 <- lm(data = iw.score,
log(Pb) ~ score + community + season + proximity.km)
summary(pb.0)
check_model(pb.0)
performance(pb.0)
anova(pb.0) #score signif
plot(allEffects(pb.0))
cd.0 <- lm(data = iw.score,
log(Cd) ~ score + community + season + proximity.km)
summary(cd.0)
check_model(cd.0)
performance(cd.0)
anova(cd.0) #score not signif
plot(allEffects(cd.0))
view(hds)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
summary(hds$score)
summary(as.factor(hds$score))
hds$score <- as.character(hds$score)
hds[hds$score=="4",]$score <- "4-5"
hds[hds$score=="5",]$score <- "4-5"
hds$score <- as.factor(hds$score)
summary(hds$score)
iw.score <- full_join(iw.dm, hds, by = c("site"))
iw.score <- iw.score[!is.na(iw.score$score),]
iw.score <- iw.score[!is.na(iw.score$community),]
view(iw.score)
table(iw.score$score, iw.score$community)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds$score <- as.character(hds$score)
hds$score_bin <- hds$score
hds[hds$score_bin=="1",]$score_bin <- "1-2"
hds[hds$score_bin=="2",]$score_bin <- "1-2"
hds[hds$score_bin=="3",]$score_bin <- "3-5"
hds[hds$score_bin=="4",]$score_bin <- "3-5"
hds[hds$score_bin=="5",]$score_bin <- "3-5"
hds$score_bin <- as.factor(hds$score_bin)
summary(hds$score_bin)
table(iw.score$score, iw.score$community)
table(iw.score$score_bin, iw.score$community)
iw.score <- full_join(iw.dm, hds, by = c("site"))
iw.score <- iw.score[!is.na(iw.score$score_bin),]
iw.score <- iw.score[!is.na(iw.score$community),]
table(iw.score$score_bin, iw.score$community)
iw.score <- full_join(iw.dm, hds, by = c("site"))
View(iw.score)
write.csv(iw.score, "score_test.csv")
#data formatting----
#iw.score contains samples with homes that had at least one response to the home description survey. if not all 5 questions were answered, a value of 0 was automatically assigned as a conservative assumption of behavior
#view(iw.score)
iw.score.long <- pivot_longer(data = iw.score,
cols = Be:Pb,
values_to = "concentration",
names_to = "analyte")
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score_bin, fill = score_bin)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintenence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintenence score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
#write.csv(iw.score, "score_test.csv")
iw.score <- iw.score[!is.na(iw.score$score_bin),]
iw.score <- iw.score[!is.na(iw.score$community),]
table(iw.score$score_bin, iw.score$community)
#data formatting----
#iw.score contains samples with homes that had at least one response to the home description survey. if not all 5 questions were answered, a value of 0 was automatically assigned as a conservative assumption of behavior
#view(iw.score)
iw.score.long <- pivot_longer(data = iw.score,
cols = Be:Pb,
values_to = "concentration",
names_to = "analyte")
#initial viz
ggplot(iw.score.long, mapping = aes(y = log(concentration), x = score_bin, fill = score_bin)) +
geom_boxplot() +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 5)) +
#scale_fill_viridis_d() +
facet_wrap(analyte~., scales = "free") +
labs(x = "\nMaintenence Score",
y = "[analyte] (ln(ug/L))\n",
title = "Boxplots of maintenence score by analyte",
fill = "")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_text(vjust = .5),
legend.position="none",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
