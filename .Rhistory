# iw.dm.detects$period <- factor(iw.dm.detects$period, levels = c("First", "Last"))
# iw.dm.detects$season <- factor(iw.dm.detects$season, levels = c("Winter", "Monsoon"))
# iw.dm.detects$sampling_year <- factor(iw.dm.detects$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
# iw.dm.detects$community <- factor(iw.dm.detects$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
#
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
view(pli)
#pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pollution_index_selected_analytes
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
iw.dm <- iw.dm[-c(19,39),]
iw.dm <- iw.dm[iw.dm$site!="H222",]
#contamination factor=====
pli_dat<- pli[-c(19,39),]
pli_dat <- pli_dat[pli_dat$site!="H222",]
pli_short<-  pli_dat[, -c(15, 19, 25, 26, 28, 29)]
pli_dat2<- pivot_longer(pli_short,
cols = Be:Pb,
values_to = "contamination_factor",
names_to = "analytes")
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
#calculate natural log ----
iw.dm.long$ln_value <- log(iw.dm.long$value)
#create longer version to compare transformation
iw.dm.longer <- pivot_longer(data = iw.dm.long,
cols = c(value,ln_value),
names_to = "transformation",
values_to = "concentration")
iw.dm.longer[iw.dm.longer$transformation == "value",]$transformation <- "untransformed"
iw.dm.longer[iw.dm.longer$transformation == "ln_value",]$transformation <- "natural log"
iw.dm.longer$transformation <- as.factor(iw.dm.longer$transformation)
#create natural log dataframes for analysis
iw.ln.dm.long <- subset(iw.dm.long, select = -c(value))
iw.ln.dm <- pivot_wider(data = iw.ln.dm.long,
values_from = "ln_value",
names_from ="analyte")
hist(iw.dm$pli)
hist(log(iw.dm$pli))
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
view(pli)
#pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
iw.dm <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected")
#Kunal Palawat and Gift Chukwuonye
#Description: Script to load and clean up datasets for analysis. RUN THIS every time before coding.
#
#Load libraries
library(readxl) #read excel files
library(tidyverse)
library(ggplot2)
library(table1)
iw.dm <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected")
hds <- read.xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#Kunal Palawat and Gift Chukwuonye
#Description: Script to load and clean up datasets for analysis. RUN THIS every time before coding.
#
#Load libraries
library(readxl) #read excel files
library(tidyverse)
library(ggplot2)
library(table1)
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected")
# iw.dm.detects <- read_xlsx("data/data_clean/IW_DM_Y123.xlsx", sheet = "Detection", col_names = TRUE)
# mlod <- read_xlsx("data/data_processing/IPSW_MLODS.xlsx", sheet = "corrected - 12.22.20", col_names = TRUE)
# iw.mlod <- mlod[mlod$`Sample Type`=="IW",]
# iw.mlod.dm <- iw.mlod[iw.mlod$Analysis=="DM",]
#wrangle data
#add period and season variables
iw.dm$period <- iw.dm$samplings
iw.dm$season <- iw.dm$samplings
#redefine them
iw.dm[iw.dm$period=="First Winter",]$period <- "First"
iw.dm[iw.dm$period=="Last Winter",]$period <- "Last"
iw.dm[iw.dm$period=="First Monsoon",]$period <- "First"
iw.dm[iw.dm$period=="Last Monsoon",]$period <- "Last"
iw.dm[iw.dm$season=="First Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="Last Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="First Monsoon",]$season <- "Monsoon"
iw.dm[iw.dm$season=="Last Monsoon",]$season <- "Monsoon"
#changing year #Make a new variable with this
iw.dm$year <- iw.dm$sampling_year
iw.dm[iw.dm$year=="2017-2018",]$year <- "Water Year 1"
iw.dm[iw.dm$year=="2018-2019",]$year <- "Water Year 2"
iw.dm[iw.dm$year=="2019-2020",]$year <- "Water Year 3"
#remove field blanks. to remove anything, type !="Value" to remove them.
iw.dm <- iw.dm[iw.dm$type!="B", ]
#remove ATS samples because ATS samples are not included in PH research.
iw.dm <- iw.dm[iw.dm$site!="ATS1", ]
#remove year 3 monsoon samples
iw.dm$ssnyear <- paste(iw.dm$season, iw.dm$year)
iw.dm <- iw.dm[iw.dm$ssnyear!="Monsoon Water Year 3", ]
#confirm correct order of categorical variables
#iw.dm$samplings <- factor(iw.dm$samplings, levels = c("FW", "LW", "FM", "LM"))
iw.dm$samplings <- factor(iw.dm$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
iw.dm$period <- factor(iw.dm$period, levels = c("First", "Last"))
iw.dm$season <- factor(iw.dm$season, levels = c("Winter", "Monsoon"))
iw.dm$sampling_year <- factor(iw.dm$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
iw.dm$community <- factor(iw.dm$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
#
# #For the detection data,
# #detect data
# #add period and season variables
# iw.dm.detects$period <- iw.dm.detects$samplings
# iw.dm.detects$season <- iw.dm.detects$samplings
#
#
# #redefine them
# iw.dm.detects[iw.dm.detects$period=="First Winter",]$period <- "First"
# iw.dm.detects[iw.dm.detects$period=="Last Winter",]$period <- "Last"
# iw.dm.detects[iw.dm.detects$period=="First Monsoon",]$period <- "First"
# iw.dm.detects[iw.dm.detects$period=="Last Monsoon",]$period <- "Last"
#
# iw.dm.detects[iw.dm.detects$season=="First Winter",]$season <- "Winter"
# iw.dm.detects[iw.dm.detects$season=="Last Winter",]$season <- "Winter"
# iw.dm.detects[iw.dm.detects$season=="First Monsoon",]$season <- "Monsoon"
# iw.dm.detects[iw.dm.detects$season=="Last Monsoon",]$season <- "Monsoon"
#
#
# #changing year
# iw.dm.detects$year<-iw.dm.detects$sampling_year
#
# iw.dm.detects[iw.dm.detects$sampling_year=="2017-2018",]$sampling_year <- "Water Year 1"
# iw.dm.detects[iw.dm.detects$sampling_year=="2018-2019",]$sampling_year <- "Water Year 2"
# iw.dm.detects[iw.dm.detects$sampling_year=="2019-2020",]$sampling_year <- "Water Year 3"
#
# #remove year 3 monsoon samples
# iw.dm.detects$ssnyear <- paste(iw.dm.detects$season, iw.dm.detects$sampling_year)
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$ssnyear!="Monsoon Water Year 3", ]
#
# #remove field blanks. to remove anything, type !="Value" to remove them.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$type!="B", ]
#
#
# #remove ATS samples because ATS samples are not included in PH research.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$site!="ATS1", ]
#
# #confirm correct order of categorical variables
# #iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("FW", "LW", "FM", "LM"))
# iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
# iw.dm.detects$period <- factor(iw.dm.detects$period, levels = c("First", "Last"))
# iw.dm.detects$season <- factor(iw.dm.detects$season, levels = c("Winter", "Monsoon"))
# iw.dm.detects$sampling_year <- factor(iw.dm.detects$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
# iw.dm.detects$community <- factor(iw.dm.detects$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
#
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
iw.dm <- iw.dm[-c(19,39),]
iw.dm <- iw.dm[iw.dm$site!="H222",]
pli_dat<- pli[-c(19,39),]
pli_dat <- pli_dat[pli_dat$site!="H222",]
pli_short<-  pli_dat[, -c(15, 19, 25, 26, 28, 29)]
pli_dat2<- pivot_longer(pli_short,
cols = Be:Pb,
values_to = "contamination_factor",
names_to = "analytes")
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
#calculate natural log ----
iw.dm.long$ln_value <- log(iw.dm.long$value)
#create longer version to compare transformation
iw.dm.longer <- pivot_longer(data = iw.dm.long,
cols = c(value,ln_value),
names_to = "transformation",
values_to = "concentration")
iw.dm.longer[iw.dm.longer$transformation == "value",]$transformation <- "untransformed"
iw.dm.longer[iw.dm.longer$transformation == "ln_value",]$transformation <- "natural log"
iw.dm.longer$transformation <- as.factor(iw.dm.longer$transformation)
#create natural log dataframes for analysis
iw.ln.dm.long <- subset(iw.dm.long, select = -c(value))
iw.ln.dm <- pivot_wider(data = iw.ln.dm.long,
values_from = "ln_value",
names_from ="analyte")
hds <- read.xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
hds <- read.excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
##Q67 ----
q67 <- hds
q67$Q67 <- as.character(q67$Q67)
##Q67 ----
q67 <- hds
q67$Q67 <- as.character(q67$Q67)
q67 <- q67[q67$Q67!="0",]
q67 <- q67[!is.na(q67$Q67),]
q67[q67$Q67=="1",]$Q67 <- "Yes"
q67[q67$Q67=="2",]$Q67 <- "No"
q67$Q67 <- as.factor(q67$Q67)
summary(as.factor)
summary(q67$Q67)
q67 <- q67[q67$Q67!="N/A",]
summary(q67$Q67)
##Q67 ----
q67 <- hds
q67$Q67 <- as.character(q67$Q67)
q67 <- q67[q67$Q67!="0",]
q67 <- q67[q67$Q67!="N/A",]
q67 <- q67[!is.na(q67$Q67),]
q67[q67$Q67=="1",]$Q67 <- "Yes"
q67[q67$Q67=="2",]$Q67 <- "No"
q67$Q67 <- as.factor(q67$Q67)
summary(q67$Q67)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[hds$Q67=="0",]$Q67 <- "No"
hds[hds$Q67=="1",]$Q67 <- "Yes"
hds[hds$Q67=="2",]$Q67 <- "No"
hds$Q67 <- as.factor(hds$Q67)
summary(hds$Q67)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[hds$Q67=="",]$Q67 <- "No"
hds[hds$Q67==" ",]$Q67 <- "No"
hds[hds$Q67=="NA",]$Q67 <- "No"
hds[hds$Q67==NA,]$Q67 <- "No"
hds[hds$Q67=="NA",]$Q67 <- "No"
View(hds)
View(hds)
hds[is.na(hds$Q67),]$Q67 <- "No"
View(hds)
hds[hds$Q67=="0",]$Q67 <- "No"
hds[hds$Q67=="1",]$Q67 <- "Yes"
hds[hds$Q67=="2",]$Q67 <- "No"
hds$Q67 <- as.factor(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "No"
hds[hds$Q71=="0",]$Q71 <- "No"
hds[hds$Q71=="1",]$Q71 <- "Yes"
hds[hds$Q71=="2",]$Q71 <- "No"
hds$Q71 <- as.factor(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "No"
hds[hds$Q76=="0",]$Q76 <- "No"
hds[hds$Q76=="1",]$Q76 <- "Yes"
hds[hds$Q76=="2",]$Q76 <- "No"
hds[hds$Q76=="3",]$Q76 <- "No"
hds$Q76 <- as.factor(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "No"
hds[hds$Q77=="0",]$Q77 <- "No"
hds[hds$Q77=="1",]$Q77 <- "Yes"
hds[hds$Q77=="2",]$Q77 <- "No"
hds[hds$Q77=="3",]$Q77 <- "No"
hds$Q77 <- as.factor(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "Yes"
hds[hds$Q79=="0",]$Q79 <- "Yes"
hds[hds$Q79=="1",]$Q79 <- "No"
hds[hds$Q79=="2",]$Q79 <- "Yes"
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "Yes"
hds[hds$Q79=="0",]$Q79 <- "Yes"
hds[hds$Q79=="1",]$Q79 <- "No"
hds[hds$Q79=="2",]$Q79 <- "Yes"
hds[hds$Q79=="100",]$Q79 <- "Yes"
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "No"
hds[hds$Q79=="0",]$Q79 <- "No"
hds[hds$Q79=="1",]$Q79 <- "No"
hds[hds$Q79=="2",]$Q79 <- "Yes"
hds[hds$Q79=="100",]$Q79 <- "No"
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#load in data and if there is a missing value, assume participant does not follow best practices - conservative estimate
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "No"
hds[hds$Q67=="0",]$Q67 <- "No"
hds[hds$Q67=="1",]$Q67 <- "Yes"
hds[hds$Q67=="2",]$Q67 <- "No"
hds$Q67 <- as.factor(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "No"
hds[hds$Q71=="0",]$Q71 <- "No"
hds[hds$Q71=="1",]$Q71 <- "Yes"
hds[hds$Q71=="2",]$Q71 <- "No"
hds$Q71 <- as.factor(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "No"
hds[hds$Q76=="0",]$Q76 <- "No"
hds[hds$Q76=="1",]$Q76 <- "Yes"
hds[hds$Q76=="2",]$Q76 <- "No"
hds[hds$Q76=="3",]$Q76 <- "No"
hds$Q76 <- as.factor(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "No"
hds[hds$Q77=="0",]$Q77 <- "No"
hds[hds$Q77=="1",]$Q77 <- "Yes"
hds[hds$Q77=="2",]$Q77 <- "No"
hds[hds$Q77=="3",]$Q77 <- "No"
hds$Q77 <- as.factor(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "No"
hds[hds$Q79=="0",]$Q79 <- "No"
hds[hds$Q79=="1",]$Q79 <- "No"
hds[hds$Q79=="2",]$Q79 <- "Yes"
hds[hds$Q79=="100",]$Q79 <- "No"
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#load in data and if there is a missing value, assume participant does not follow best practices - conservative estimate. No is a zero. Yes is a 1
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "0"
hds[hds$Q67=="0",]$Q67 <- "0"
hds[hds$Q67=="1",]$Q67 <- "1"
hds[hds$Q67=="2",]$Q67 <- "0"
hds$Q67 <- as.factor(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "0"
hds[hds$Q71=="0",]$Q71 <- "0"
hds[hds$Q71=="1",]$Q71 <- "1"
hds[hds$Q71=="2",]$Q71 <- "0"
hds$Q71 <- as.factor(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "0"
hds[hds$Q76=="0",]$Q76 <- "0"
hds[hds$Q76=="1",]$Q76 <- "1"
hds[hds$Q76=="2",]$Q76 <- "0"
hds[hds$Q76=="3",]$Q76 <- "0"
hds$Q76 <- as.factor(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "0"
hds[hds$Q77=="0",]$Q77 <- "0"
hds[hds$Q77=="1",]$Q77 <- "1"
hds[hds$Q77=="2",]$Q77 <- "0"
hds[hds$Q77=="3",]$Q77 <- "0"
hds$Q77 <- as.factor(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "0"
hds[hds$Q79=="0",]$Q79 <- "0"
hds[hds$Q79=="1",]$Q79 <- "0"
hds[hds$Q79=="2",]$Q79 <- "1"
hds[hds$Q79=="100",]$Q79 <- "0"
hds$Q79 <- as.factor(hds$Q79)
summary(hds$Q79)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds$Q67 <- as.numeric(hds$Q67)
summary(hds$Q67)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#load in data and if there is a missing value, assume participant does not follow best practices - conservative estimate. No is a zero. Yes is a 1
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "0"
hds[hds$Q67=="0",]$Q67 <- "0"
hds[hds$Q67=="1",]$Q67 <- "1"
hds[hds$Q67=="2",]$Q67 <- "0"
hds$Q67 <- as.numeric(hds$Q67)
summary(hds$Q67)
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#load in data and if there is a missing value, assume participant does not follow best practices - conservative estimate. No is a zero. Yes is a 1
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "0"
hds[hds$Q67=="0",]$Q67 <- "0"
hds[hds$Q67=="1",]$Q67 <- "1"
hds[hds$Q67=="2",]$Q67 <- "0"
hds$Q67 <- as.numeric(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "0"
hds[hds$Q71=="0",]$Q71 <- "0"
hds[hds$Q71=="1",]$Q71 <- "1"
hds[hds$Q71=="2",]$Q71 <- "0"
hds$Q71 <- as.numeric(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "0"
hds[hds$Q76=="0",]$Q76 <- "0"
hds[hds$Q76=="1",]$Q76 <- "1"
hds[hds$Q76=="2",]$Q76 <- "0"
hds[hds$Q76=="3",]$Q76 <- "0"
hds$Q76 <- as.numeric(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "0"
hds[hds$Q77=="0",]$Q77 <- "0"
hds[hds$Q77=="1",]$Q77 <- "1"
hds[hds$Q77=="2",]$Q77 <- "0"
hds[hds$Q77=="3",]$Q77 <- "0"
hds$Q77 <- as.numeric(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "0"
hds[hds$Q79=="0",]$Q79 <- "0"
hds[hds$Q79=="1",]$Q79 <- "0"
hds[hds$Q79=="2",]$Q79 <- "1"
hds[hds$Q79=="100",]$Q79 <- "0"
hds$Q79 <- as.numeric(hds$Q79)
summary(hds$Q79)
hds$score <- (hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79)/5
summary(hds$score)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
summary(hds$score)
hds$score <- as.factor(hds$score)
summary(hds$score)
hds[hds$score=="4",]$score <- "4-5"
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds[hds$score=="4",]$score <- "4-5"
hds[hds$score==4,]$score <- "4-5"
hds$score <- as.character(hds$score)
hds[hds$score=="4",]$score <- "4-5"
hds[hds$score=="5",]$score <- "4-5"
hds$score <- as.factor(hds$score)
summary(hds$score)
iw.score <- full_join(iw.dm, hds, by = c("site"))
iw.score <- iw.score[!is.na(iw.score$score),]
iw.score <- iw.score[!is.na(iw.score$community),]
view(iw.score)
boxplot(log(iw.score$Zn)~iw.score$score)
boxplot(log(iw.score$As)~iw.score$score)
boxplot(log(iw.score$Cd)~iw.score$score)
boxplot(log(iw.score$Pb)~iw.score$score)
boxplot(log(iw.score$Cu)~iw.score$score)
boxplot(log(iw.score$Fe)~iw.score$score)
boxplot(log(iw.score$Cd)~iw.score$score)
