names_to = "demographic")
#clean up data for summaries
demo.long <- demo.long %>%
drop_na(value) %>%
filter(value!='No response') %>%
filter(value!='555') %>%
filter(value!='999')
#combine demo to concentration data
iw.demo <- full_join(iw.dm, demo, by = c("site", "community"))
#remove demo data that does not match to any samples and any samples that do not have demo data
iw.demo <- iw.demo %>%
drop_na(mlod.name) %>%
drop_na(Consent)
iw.demo$Zip <- as.factor(iw.demo$Zip)
#make longer
iw.demo.long <- pivot_longer(iw.demo,
cols = c(Be:Pb,pli),
values_to = "value",
names_to = "analyte")
#log transform
iw.demo.long$value.ln <- log(iw.demo.long$value)
#make demo data longer for summaries
iw.demo.longer <- pivot_longer(iw.demo.long,
cols = c(Zip:`Low Income`),
values_to = "response",
names_to = "demographic")
#clean up data for summaries
iw.demo.longer <- iw.demo.longer %>%
filter(response!='No response') %>%
filter(response!='555') %>%
filter(response!='999')%>%
drop_na(response)
iw.demo.long <- pivot_wider(iw.demo.longer,
values_from = "response",
names_from = "demographic")
#com x household size
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Household Size 2",
filename.string = "X2_comsize")
#com x income
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Low Income",
filename.string = "X2_comsize")
lm(data = iw.demo,
prox.normal~`Primary Language`)
plang <- lm(data = iw.demo,
prox.normal~`Primary Language`)
summary(plang)
plang <- lm(data = iw.demo,
prox.normal~`Primary Language`*community_2)
summary(plang)
ggplot(data = iw.demo, mapping = aes(y = prox.normal, fill = "Primary Language"))+
geom_hist()
ggplot(data = iw.demo, mapping = aes(y = prox.normal, fill = "Primary Language"))+
geom_histogram()
ggplot(data = iw.demo, mapping = aes(y = prox.normal, color = "Primary Language"))+
geom_histogram()
ggplot(data = iw.demo, mapping = aes(y = prox.normal, color = "`Primary Language`"))+
geom_histogram()
geom_histogram(aes(fill = community_2)
)
ggplot(data = iw.demo, mapping = aes(y = prox.normal, fill = `Primary Language`))+
geom_histogram()
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Primary Language`))+
geom_histogram()
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Primary Language`))+
geom_histogram() +
facet_wrap(.~community_2)
summary(plang)
#prox x race
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_wrap(.~community_2)
#prox x race
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community)
#prox x race
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x race
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
#facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
facet_grid(.~Education_grouped) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#add prox to just demo data
demo <- full_join(demo, com, by = c("site"))
demo <- demo %>%
drop_na(Consent)
View(demo)
plang <- lm(data = demo,
prox.normal~`Primary Language`*community_2)
summary(plang)
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Primary Language`))+
geom_histogram() +
facet_wrap(.~community_2)
#prox x race only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x race only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
#facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x race only correlated for Tucson
ggplot(data = iw.demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x race only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x race only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Race Ethnicity`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `BIPOC`))+
geom_histogram() +
#facet_grid(.~community_2) +
theme(legend.position = "bottom")
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `BIPOC`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `BIPOC`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Education_grouped`))+
geom_histogram() +
#facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Household Size 2`))+
geom_histogram() +
#facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x education only correlated for Tucson
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Household Size 2`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Low Income Level`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Low Income`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Low Income`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `Low Income`))+
geom_histogram() +
#facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = proximity.km, fill = `Low Income`))+
geom_histogram() +
#facet_grid(.~community_2) +
theme(legend.position = "bottom")
#prox x income
ggplot(data = demo, mapping = aes(x = proximity.km, fill = `Low Income`))+
geom_histogram() +
facet_grid(.~community_2) +
theme(legend.position = "bottom")
#ANOVAs ----
pli.1 <- lm(data = iw.demo,
pli ~ community_2, BIPOC, `Low Income`, `Primary Language` + `Education_grouped`+Zip)
#ANOVAs ----
pli.1 <- lm(data = iw.demo,
pli ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
#ANOVAs ----
pli.demo.1 <- lm(data = iw.demo,
pli ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
summary(pli.demo.1)
summary(pli.demo.1)
summary(as.factor(BIPOC))
summary(as.factor(iw.demo$BIPOC))
summary(as.factor(iw.demo$`Low Income`))
summary(as.factor(iw.demo$`Highest Levelof Education Completed`))
#ANOVAs ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other")
pli.demo.1 <- lm(data = iwm.demo,
pli ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
summary(pli.demo.1)
vif(pli.demo.1)
alias(lm(data = iwm.demo,
pli ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip))
check_model(pli.demo.1)
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
summary(pli.demo.1)
vif(pli.demo.1)
check_model(pli.demo.1)
pli.demo.2 <- lm(data = iwm.demo,
log(pli) ~ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
summary(pli.demo.2)
vif(pli.demo.2)
check_model(pli.demo.2)
pli.demo.3 <- lm(data = iwm.demo,
log(pli) ~ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+community_2)
check_model(pli.demo.3)
vif(pli.demo.3)
pli.demo.4 <- lm(data = iwm.demo,
log(pli) ~ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`)
vif(pli.demo.4)
check_model(pli.demo.4)
anova(pli.demo.4)
summary(pli.demo.4)
#correlated for globe?
ggplot(data = demo, mapping = aes(x = prox.normal, fill = `BIPOC`))+
geom_histogram() +
facet_grid(.~community) +
theme(legend.position = "bottom")
performance(pli.demo.4)
##pli bivariate ----
pli.demorace.1 <- lm(data = iwm.demo,
log(pli) ~ BIPOC*community_2)
summary(pli.demorace.1)
vif(pli.demorace.1)
check_model(pli.demorace.1)
pli.demorace.2 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+community_2)
summary(pli.demorace.2)
vif(pli.demorace.2)
check_model(pli.demorace.2)
anova(pli.demorace.2)
summary(pli.demorace.2)
step(pli.demorace.2)
step(pli.demorace.1)
performance(pli.demorace.2)
step(pli.demo.1)
y
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other")
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip)
step(pli.demo.1)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip, `Primary Language`, BIPOC)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other")
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip, `Primary Language`, BIPOC, Education_grouped, prox.normal)
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip+prox.normal)
step(pli.demo.1)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip, `Primary Language`, BIPOC, Education_grouped, prox.normal,community_2)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip, `Primary Language`, BIPOC, Education_grouped, prox.normal,community_2)
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip+prox.normal)
summary(pli.demo.1)
summary(demo$Zip)
summary(iw.demo$Zip)
view(iw.demo)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip, `Primary Language`, BIPOC, Education_grouped, prox.normal,community_2) %>%
semi_join(demo %>%
count(Zip) %>%
filter(n >=3))
summary(iwm.demo$Zip)
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip+prox.normal)
step(pli.demo.1)
summary(iwm.demo$`Low Income`)
summary(as.factor(iwm.demo$`Low Income`))
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip)%>%
drop_na(`Primary Language`)%>%
drop_na(BIPOC)%>%
drop_na(Education_grouped)%>%
drop_na(prox.normal)%>%
drop_na(community_2) %>%
semi_join(demo %>%
count(Zip) %>%
filter(n >=3))
summary(as.factor(iwm.demo$`Low Income`))
view(iwm.demo)
#ANOVAs ----
##pli, multivariate ----
iwm.demo <- iw.demo %>%
filter(BIPOC!="Other") %>%
drop_na(Zip)%>%
drop_na(`Primary Language`)%>%
drop_na(BIPOC)%>%
drop_na(Education_grouped)%>%
drop_na(prox.normal)%>%
drop_na(community_2) %>%
drop_na(`Low Income`)%>%
semi_join(demo %>%
count(Zip) %>%
filter(n >=3))
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip+prox.normal)
step(pli.demo.1)
pli.demo.5 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip)
vif(pli.demo.5)
check_model(pli.demo.5)
anova(pli.demo.5)
performance(pli.demo.5)
summary(pli.demo.5)
plot(allEffects(pli.demo.5))
pli.demo.6 <- lm(data = iwm.demo,
log(pli) ~ BIPOC*Zip)
summary(pli.demo.6)
vif(pli.demo.6)
check_model(pli.demo.6)
anova(pli.demo.6)
pli.demo.7 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip+community_2)
summary(pli.demo.7)
vif(pli.demo.7)
check_model(pli.demo.7)
anova(pli.demo.7)
xtest <- function(dataDF, var1.string, var2.string, filename.string){
library(corrplot)
library(tidyverse)
dat2 <- dataDF
var1 <- var1.string
var2 <- var2.string
filename <- filename.string
dat <- dat2 %>%
drop_na(all_of(var1)) %>%
drop_na(all_of(var2))
X2 <- chisq.test(table(pull(dat,var1), pull(dat,var2)))
X2$residuals
corrplot(X2$residuals, is.cor = FALSE)
dev.print(jpeg, paste(filename, ".jpg", sep = ""), res=300, height=7, width=7, units="in")
# contrib <- 100*X2$residuals^2/X2$statistic
# corrplot(contrib, is.cor = FALSE)
# dev.print(jpeg, paste(filename, ".jpg", sep = ""), res=300, height=7, width=7, units="in")
#
}
#Initial correlations ----
##community----
#community x zip are correlated, definitely dont use both in a single model
#community x language are correlated
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Primary Language",
filename.string = "X2_comlang")
#community and race are correlated - does this mean we cannot have both those variables in the same model?
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Race Ethnicity",
filename.string = "X2_comrace")
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "BIPOC",
filename.string = "X2_compoc")
#com x ed are correlated
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Education_grouped",
filename.string = "X2_comed")
#com x household size
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Household Size 2",
filename.string = "X2_comsize")
#com x income
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Low Income",
filename.string = "X2_comsize")
xtest <- function(dataDF, var1.string, var2.string, filename.string){
library(corrplot)
library(tidyverse)
dat2 <- dataDF
var1 <- var1.string
var2 <- var2.string
filename <- filename.string
dat <- dat2 %>%
drop_na(all_of(var1)) %>%
drop_na(all_of(var2))
X2 <- chisq.test(table(pull(dat,var1), pull(dat,var2)))
print(X2)
X2$residuals
p1 <- corrplot(X2$residuals, is.cor = FALSE)
print(p1)
dev.print(jpeg, paste(filename, ".jpg", sep = ""), res=300, height=7, width=7, units="in")
# contrib <- 100*X2$residuals^2/X2$statistic
# corrplot(contrib, is.cor = FALSE)
# dev.print(jpeg, paste(filename, ".jpg", sep = ""), res=300, height=7, width=7, units="in")
#
}
#Initial correlations ----
##community----
#community x zip are correlated, definitely dont use both in a single model
#community x language are correlated
xtest(dataDF = demo,
var1.string = "community_2",
var2.string = "Primary Language",
filename.string = "X2_comlang")
pli.demo.1 <- lm(data = iwm.demo,
log(pli) ~ season + community_2+ BIPOC + `Low Income`+ `Primary Language` + `Education_grouped`+Zip+prox.normal)
check_model(pli.demo.1)
step(pli.demo.1)
pli.demo.5.1 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip+season)
anova(pli.demo.5, pli.demo.5.1)
compare_performance(pli.demo.5, pli.demo.5.1)
###best linear model ----
pli.demo.5 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip+season)
summary(pli.demo.5)
###best linear model ----
pli.demo.5 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip+season)
summary(pli.demo.5)
vif(pli.demo.5)
check_model(pli.demo.5)
pli.demo.7 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+Zip+community_2+season)
summary(pli.demo.7)
pli.demo.7 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+community_2+season+Zip)
summary(pli.demo.7)
anova(pli.demo.7)
check_model(pli.demo.7)
vif(pli.demo.7)
pli.demo.7 <- lm(data = iwm.demo,
log(pli) ~ BIPOC+community_2+season+Zip+prox.normal)
summary(pli.demo.7)
anova(pli.demo.7)
pli.demo.7.1 <- lm(data = iwm.demo,
log(pli) ~ prox.normal)
summary(pli.demo.7.1)
summary(demoeducation_grouped
)
summary(demo$Education_grouped)
summary(as.factor(demo$Education_grouped))
plang <- lm(data = demo,
prox.normal~`Primary Language`)
summary(plang)
plang <- lm(data = demo,
prox.normal~`Primary Language`+community)
summary(plang)
citation()
