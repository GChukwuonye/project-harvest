hds[hds$score_bin=="5",]$score_bin <- "3-5"
hds$score_bin <- as.factor(hds$score_bin)
summary(hds$score_bin)
iw.score <- full_join(iw.dm, hds, by = c("site"))
#write.csv(iw.score, "score_test.csv")
iw.score <- iw.score[!is.na(iw.score$score_bin),]
iw.score <- iw.score[!is.na(iw.score$community),]
table(iw.score$score_bin, iw.score$community)
#Kunal Palawat and Gift Chukwuonye
#Description: Script to load and clean up datasets for analysis. RUN THIS every time before coding.
#
#Load libraries====
library(readxl) #read excel files
library(tidyverse)
library(ggplot2)
library(table1)
iw.dm <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected")
# iw.dm.detects <- read_xlsx("data/data_clean/IW_DM_Y123.xlsx", sheet = "Detection", col_names = TRUE)
# mlod <- read_xlsx("data/data_processing/IPSW_MLODS.xlsx", sheet = "corrected - 12.22.20", col_names = TRUE)
# iw.mlod <- mlod[mlod$`Sample Type`=="IW",]
# iw.mlod.dm <- iw.mlod[iw.mlod$Analysis=="DM",]
#wrangle data
#add period and season variables
iw.dm$period <- iw.dm$samplings
iw.dm$season <- iw.dm$samplings
#redefine them
iw.dm[iw.dm$period=="First Winter",]$period <- "First"
iw.dm[iw.dm$period=="Last Winter",]$period <- "Last"
iw.dm[iw.dm$period=="First Monsoon",]$period <- "First"
iw.dm[iw.dm$period=="Last Monsoon",]$period <- "Last"
iw.dm[iw.dm$season=="First Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="Last Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="First Monsoon",]$season <- "Monsoon"
iw.dm[iw.dm$season=="Last Monsoon",]$season <- "Monsoon"
#changing year #Make a new variable with this
iw.dm$year <- iw.dm$sampling_year
iw.dm[iw.dm$year=="2017-2018",]$year <- "Water Year 1"
iw.dm[iw.dm$year=="2018-2019",]$year <- "Water Year 2"
iw.dm[iw.dm$year=="2019-2020",]$year <- "Water Year 3"
#remove field blanks. to remove anything, type !="Value" to remove them.
iw.dm <- iw.dm[iw.dm$type!="B", ]
#remove ATS samples because ATS samples are not included in PH research.
iw.dm <- iw.dm[iw.dm$site!="ATS1", ]
#remove year 3 monsoon samples
iw.dm$ssnyear <- paste(iw.dm$season, iw.dm$year)
iw.dm <- iw.dm[iw.dm$ssnyear!="Monsoon Water Year 3", ]
#confirm correct order of categorical variables
#iw.dm$samplings <- factor(iw.dm$samplings, levels = c("FW", "LW", "FM", "LM"))
iw.dm$samplings <- factor(iw.dm$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
iw.dm$period <- factor(iw.dm$period, levels = c("First", "Last"))
iw.dm$season <- factor(iw.dm$season, levels = c("Winter", "Monsoon"))
iw.dm$sampling_year <- factor(iw.dm$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
iw.dm$community <- factor(iw.dm$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
iw.dm <- iw.dm[-c(19,39),]
iw.dm <- iw.dm[iw.dm$site!="H222",]
#contamination factor=====
pli_dat<- pli[-c(19,39),]
pli_dat <- pli_dat[pli_dat$site!="H222",]
pli_short<-  pli_dat[, -c(15, 19, 25, 26, 28, 29)]
pli_dat2<- pivot_longer(pli_short,
cols = Be:Pb,
values_to = "contamination_factor",
names_to = "analytes")
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
#calculate natural log ----
iw.dm.long$ln_value <- log(iw.dm.long$value)
#create longer version to compare transformation
iw.dm.longer <- pivot_longer(data = iw.dm.long,
cols = c(value,ln_value),
names_to = "transformation",
values_to = "concentration")
iw.dm.longer[iw.dm.longer$transformation == "value",]$transformation <- "untransformed"
iw.dm.longer[iw.dm.longer$transformation == "ln_value",]$transformation <- "natural log"
iw.dm.longer$transformation <- as.factor(iw.dm.longer$transformation)
#create natural log dataframes for analysis
iw.ln.dm.long <- subset(iw.dm.long, select = -c(value))
iw.ln.dm <- pivot_wider(data = iw.ln.dm.long,
values_from = "ln_value",
names_from ="analyte")
hds <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/IO_HDS.xlsx")
#load in data and if there is a missing value, assume participant does not follow best practices - conservative estimate. No is a zero. Yes is a 1
#assumption: this index assumes equal influence of each best practice on rainwater quality
#assumption/limitation: we assume that the maintenance action reported was consistent across the duration of the study
##Q67 Do you clean parts of your roof draining system (like the debris filter, gutters, scuppers, etc.)? ----
hds$Q67 <- as.character(hds$Q67)
hds[is.na(hds$Q67),]$Q67 <- "0"
hds[hds$Q67=="0",]$Q67 <- "0"
hds[hds$Q67=="1",]$Q67 <- "1"
hds[hds$Q67=="2",]$Q67 <- "0"
hds$Q67 <- as.numeric(hds$Q67)
summary(hds$Q67)
##Q71 Do you treat or wash your cistern with anything? ----
hds$Q71 <- as.character(hds$Q71)
hds[is.na(hds$Q71),]$Q71 <- "0"
hds[hds$Q71=="0",]$Q71 <- "0"
hds[hds$Q71=="1",]$Q71 <- "1"
hds[hds$Q71=="2",]$Q71 <- "0"
hds$Q71 <- as.numeric(hds$Q71)
summary(hds$Q71)
##Q76 Does your cistern have a first flush? ----
hds$Q76 <- as.character(hds$Q76)
hds[is.na(hds$Q76),]$Q76 <- "0"
hds[hds$Q76=="0",]$Q76 <- "0"
hds[hds$Q76=="1",]$Q76 <- "1"
hds[hds$Q76=="2",]$Q76 <- "0"
hds[hds$Q76=="3",]$Q76 <- "0"
hds$Q76 <- as.numeric(hds$Q76)
summary(hds$Q76)
##Q77 Does your cistern have a screen/filter for incoming water from down spout on top of the tank? ----
hds$Q77 <- as.character(hds$Q77)
hds[is.na(hds$Q77),]$Q77 <- "0"
hds[hds$Q77=="0",]$Q77 <- "0"
hds[hds$Q77=="1",]$Q77 <- "1"
hds[hds$Q77=="2",]$Q77 <- "0"
hds[hds$Q77=="3",]$Q77 <- "0"
hds$Q77 <- as.numeric(hds$Q77)
summary(hds$Q77)
##Q79 Do you ever NOT remove the screen/filter and leave your cistern without the filter? ----
##question edited so that the Y/N response goes the same direction as the other questions
hds$Q79 <- as.character(hds$Q79)
hds[is.na(hds$Q79),]$Q79 <- "0"
hds[hds$Q79=="0",]$Q79 <- "0"
hds[hds$Q79=="1",]$Q79 <- "0"
hds[hds$Q79=="2",]$Q79 <- "1"
hds[hds$Q79=="100",]$Q79 <- "0"
hds$Q79 <- as.numeric(hds$Q79)
summary(hds$Q79)
hds$score <- hds$Q67 + hds$Q71 + hds$Q76 + hds$Q77 + hds$Q79
hds$score <- as.character(hds$score)
hds$score_bin <- hds$score
hds[hds$score_bin=="1",]$score_bin <- "1-2"
hds[hds$score_bin=="2",]$score_bin <- "1-2"
hds[hds$score_bin=="3",]$score_bin <- "3-5"
hds[hds$score_bin=="4",]$score_bin <- "3-5"
hds[hds$score_bin=="5",]$score_bin <- "3-5"
hds$score_bin <- as.factor(hds$score_bin)
summary(hds$score_bin)
iw.score <- full_join(iw.dm, hds, by = c("site"))
#write.csv(iw.score, "score_test.csv")
iw.score <- iw.score[!is.na(iw.score$score_bin),]
iw.score <- iw.score[!is.na(iw.score$community),]
table(iw.score$score_bin, iw.score$community)
#load libraries
library(readxl)
library(MASS)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(aod)
library(wesanderson)
library(car)
library(GGally)
library(reshape2)
library(lme4)
library(compiler)
library(parallel)
library(boot)
library(lattice)
standards <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/Standards.xlsx", sheet = "standards", col_names = TRUE)
#join standard data to contaminant data, this repeats the standard data for each analyte for each sample
ex.dat <- full_join(iw.dm.long, standards, by = c("analyte"))
#make longer
ex.dat.long <- pivot_longer(data = ex.dat,
cols = PB:LDW,
values_to = "standard_value",
names_to = "standard")
#calculate exceedance
ex.dat.long$exceedance <- ifelse(ex.dat.long$value > ex.dat.long$standard_value,1,0)
#remove standard value for ease of making wider
ex.dat.long <- subset(ex.dat.long, select = -c(standard_value))
#remove NAs for analytes that do not have standards
ex.dat.long <- ex.dat.long %>%
drop_na(exceedance)
#modeling ----
ex.dat.long.prox <- ex.dat.long %>%
drop_na(proximity.km)
exc <- ex.dat.long.prox %>%
group_by(community) %>%
group_split()
View(exc)
View(exc[[1]])
exdh <- exc[[1]]
exgm <- exc[[2]]
exhw <- exc[[3]]
extu <- exc[[4]]
#Functions ----
sumFX <- function(datalongDF, subset.vector.string, value.string, dfname.string, filename.string){
#load libraries
library(tidyverse)
library(EnvStats)
#assign data
dat.long <- datalongDF
cols <- subset.vector.string
value <- value.string
dfname <- dfname.string
filename <- filename.string
#calculate summary stats
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(.data[[value]]),
exceedances_freq = signif(sum(.data[[value]])/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
#save as csv file in your working directory
write.csv(sumtable.wide, paste(filename,"_sum.csv", sep = ""))
#copy to new dataframe with a unique name and place in global environment
assign(paste(dfname), sumtable.wide, envir=.GlobalEnv)
}
##aluminum ----
### gm ----
aial.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ 1,
family = "binomial")
#maximal model
aial.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ season*proximity.km,
family = "binomial")
summary(aial.1)
#maximal model
aial.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ season+proximity.km,
family = "binomial")
summary(aial.1)
vif(aial.1)
check_model(aial.1)
library(performance)
exp(coef(aial.1))
performance(aial.1)
aial.2 <- stepAIC(aial.0,scope = list(upper=aial.1), direction="both", trace = T)
warnings()
test <- exgm[exgm$standard=="AI"&exgm$analyte=="Al",]
##!!!copper ----
### gm ----
aial.gm.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$anal.gmyte=="Al",],
exceedance ~ 1,
family = "binomial")
##!!!copper ----
### gm ----
aial.gm.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ 1,
family = "binomial")
#maximal.gm model
aial.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ season+proximity.km,
family = "binomial")
#maximal.gm model
aial.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ season,
family = "binomial")
summary(aial.gm.1)
#maximal.gm model
aial.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ proximity.km,
family = "binomial")
summary(aial.gm.1)
summary(aial.gm.1)
exp(coef(aial.gm.1))
aial.gm.2 <- stepAIC(aial.gm.0,scope = list(upper=aial.gm.1), direction="both", trace = T)
#maximal.gm model
aial.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Al",],
exceedance ~ season,
family = "binomial")
aial.gm.2 <- stepAIC(aial.gm.0,scope = list(upper=aial.gm.1), direction="both", trace = T)
summary(aial.gm.2) #no significant community effect
aod(aial.gm.2)
anova(aial.gm.2)
#get confidence interval.gms for estimates
se <- sqrt(diag(vcov(aial.gmmm.1)))
#get confidence interval.gms for estimates
se <- sqrt(diag(vcov(aial.gmm.2)))
#get confidence interval.gms for estimates
se <- sqrt(diag(vcov(aial.gm.2)))
# table of estimates with 95% CI
(tab <- cbind(Est = fixef(aial.gm.1), LL = fixef(aial.gm.1) - 1.96 * se, UL = fixef(aial.gm.1) + 1.96 *
se))
### hw ----
### not enough data to really analyze this, season is not significant on its own
aial.hw.0 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Al",],
exceedance ~ 1,
family = "binomial")
#maximal.hw model
aial.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Al",],
exceedance ~ season,
family = "binomial")
summary(aial.hw.1)
#maximal.hw model
aial.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Al",],
exceedance ~ season+proximity.km,
family = "binomial")
summary(aial.hw.1)
#maximal.hw model
aial.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Al",],
exceedance ~ proximity.km,
family = "binomial")
summary(aial.hw.1)
#maximal.hw model
aial.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Al",],
exceedance ~ season,
family = "binomial")
summary(aial.hw.1)
##zinc ----
### dh ----
### gm ----
### hw ----
### tu ----
aizn.tu.0 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Zn",],
exceedance ~ 1,
family = "binomial")
#maximal.hw model
aizn.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Zn",],
exceedance ~ season,
family = "binomial")
summary(aizn.tu.1)
vif(aizn.tu.1)
exp(coef(aizn.tu.1))
#maximal.hw model
aizn.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Zn",],
exceedance ~ season + proximity.km,
family = "binomial")
summary(aizn.tu.1)
exp(coef(aizn.tu.1))
plot(iw.dm$Zn ~ iw.dm$proximity.km)
aizn.tu.2 <- stepAIC(aizn.tu.0,scope = list(upper=aizn.tu.1), direction="both", trace = T)
summary(aizn.tu.2) #no significant community effect
exp(coef(aizn.tu.2))
##!!!copper ----
### gm ----
### not enough data to really analyze this, season is not significant on its own
aial.gm.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
##!!!copper ----
### gm ----
### not enough data to really analyze this, season is not significant on its own
aicu.gm.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
#maximal.gm model
aicu.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Cu",],
exceedance ~ season,
family = "binomial")
summary(aicu.gm.1)
exp(coef(aicu.gm.1))
aicu.gm.2 <- stepAIC(aicu.gm.0,scope = list(upper=aicu.gm.1), direction="both", trace = T)
#maximal.gm model
aicu.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Cu",],
exceedance ~ season +proximity.km,
family = "binomial")
summary(aicu.gm.1)
aicu.gm.2 <- stepAIC(aicu.gm.0,scope = list(upper=aicu.gm.1), direction="both", trace = T)
summary(aicu.gm.2) #no significant community effect
### hw ----
### not enough data to really analyze this, season and proximity is not significant on its own or together
aicu.hw.0 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
#maximal.hw model
aicu.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Cu",],
exceedance ~ season,
family = "binomial")
summary(aicu.hw.1)
#maximal.hw model
aicu.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Cu",],
exceedance ~ proximity.km,
family = "binomial")
summary(aicu.hw.1)
#maximal.hw model
aicu.hw.1 <- glm(data = exhw[exhw$standard=="AI"&exhw$analyte=="Cu",],
exceedance ~ proximity.km + season,
family = "binomial")
summary(aicu.hw.1)
vif(aicu.hw.1)
check_model(aicu.hw.1)
exp(coef(aicu.hw.1))
performance(aicu.hw.1)
aicu.hw.2 <- stepAIC(aicu.hw.0,scope = list(upper=aicu.hw.1), direction="both", trace = T)
summary(aicu.hw.2) #no significant community effect
exp(coef(aicu.hw.2))
#get confidence interval.gms for estimates
se <- sqrt(diag(vcov(aicu.hw.2)))
# table of estimates with 95% CI
(tab <- cbind(Est = fixef(aicu.gm.1), LL = fixef(aicu.gm.1) - 1.96 * se, UL = fixef(aicu.gm.1) + 1.96 *
se))
### tu ----
aicu.tu.0 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
#maximal.tu model
aicu.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Cu",],
exceedance ~ proximity.km + season,
family = "binomial")
summary(aicu.tu.1)
aicu.tu.2 <- stepAIC(aicu.tu.0,scope = list(upper=aicu.tu.1), direction="both", trace = T)
summary(aicu.tu.2) #both variables significant with a trend that makes sense
#maximal.tu model
aicu.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Cu",],
exceedance ~ season,
family = "binomial")
summary(aicu.tu.1)
aicu.tu.2 <- stepAIC(aicu.tu.0,scope = list(upper=aicu.tu.1), direction="both", trace = T)
summary(aicu.tu.2) #both variables significant with a trend that makes sense
#maximal.tu model
aicu.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Cu",],
exceedance ~ proximity.km,
family = "binomial")
summary(aicu.tu.1)
aicu.tu.2 <- stepAIC(aicu.tu.0,scope = list(upper=aicu.tu.1), direction="both", trace = T)
summary(aicu.tu.2) #both variables significant with a trend that makes sense
##manganese ----
### dh ----
### gm ----
aimn.gm.0 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Mn",],
exceedance ~ 1,
family = "binomial")
#maximal.gm model
aimn.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Mn",],
exceedance ~ season +proximity.km,
family = "binomial")
summary(aimn.gm.1)
aimn.gm.2 <- stepAIC(aimn.gm.0,scope = list(upper=aimn.gm.1), direction="both", trace = T)
summary(aimn.gm.2) #no significant variable effect
#maximal.gm model
aimn.gm.1 <- glm(data = exgm[exgm$standard=="AI"&exgm$analyte=="Mn",],
exceedance ~ season,
family = "binomial")
summary(aimn.gm.1)
##molybdenum ----
### dh ----
### hw ----
### tu ----
aimo.tu.0 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Mo",],
exceedance ~ 1,
family = "binomial")
#maximal.tu model
aimo.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Mo",],
exceedance ~ proximity.km,
family = "binomial")
summary(aimo.tu.1)
#maximal.tu model
aimo.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Mo",],
exceedance ~ season,
family = "binomial")
summary(aimo.tu.1)
#maximal.tu model
aimo.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Mo",],
exceedance ~ season +proximity.km,
family = "binomial")
summary(aimo.tu.1)
aimo.tu.2 <- stepAIC(aimo.tu.0,scope = list(upper=aimo.tu.1), direction="both", trace = T)
summary(aimo.tu.2) #no significance
exp(coef(aimo.tu.2))
##zinc ----
### dh ----
### gm ----
### hw ----
### tu ----
aizn.tu.0 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Zn",],
exceedance ~ 1,
family = "binomial")
#maximal.hw model
aizn.tu.1 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Zn",],
exceedance ~ season + proximity.km,
family = "binomial")
aizn.tu.2 <- stepAIC(aizn.tu.0,scope = list(upper=aizn.tu.1), direction="both", trace = T)
summary(aizn.tu.2) #no significant community effect
summary(aimn.gm.2) #prox still significant
summary(aimo.tu.2) #season almost signif
summary(aizn.tu.2) #no significant community effect
#FB/PB ----
##lead ----
### tu ----
fpbpb.tu.0 <- glm(data = extu[extu$standard=="AI"&extu$analyte=="Pb",],
exceedance ~ 1,
family = "binomial")
#FB/PB ----
##lead ----
### tu ----
fpbpb.tu.0 <- glm(data = extu[extu$standard=="FB"&extu$analyte=="Pb",],
exceedance ~ 1,
family = "binomial")
#maximal.hw model
fpbpb.tu.1 <- glm(data = extu[extu$standard=="FB"&extu$analyte=="Pb",],
exceedance ~ season + proximity.km,
family = "binomial")
summary(fpbpb.tu.1)
fpbpb.tu.2 <- stepAIC(fpbpb.tu.0,scope = list(upper=fpbpb.tu.1), direction="both", trace = T)
summary(fpbpb.tu.2) #no significant community effect
view(com)
