<<<<<<< Updated upstream
<<<<<<< HEAD
# iw.dm.detects[iw.dm.detects$season=="Last Monsoon",]$season <- "Monsoon"
#
#
# #changing year
# iw.dm.detects$year<-iw.dm.detects$sampling_year
#
# iw.dm.detects[iw.dm.detects$sampling_year=="2017-2018",]$sampling_year <- "Water Year 1"
# iw.dm.detects[iw.dm.detects$sampling_year=="2018-2019",]$sampling_year <- "Water Year 2"
# iw.dm.detects[iw.dm.detects$sampling_year=="2019-2020",]$sampling_year <- "Water Year 3"
#
# #remove year 3 monsoon samples
# iw.dm.detects$ssnyear <- paste(iw.dm.detects$season, iw.dm.detects$sampling_year)
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$ssnyear!="Monsoon Water Year 3", ]
#
# #remove field blanks. to remove anything, type !="Value" to remove them.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$type!="B", ]
#
#
# #remove ATS samples because ATS samples are not included in PH research.
# iw.dm.detects <- iw.dm.detects[iw.dm.detects$site!="ATS1", ]
#
# #confirm correct order of categorical variables
# #iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("FW", "LW", "FM", "LM"))
# iw.dm.detects$samplings <- factor(iw.dm.detects$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
# iw.dm.detects$period <- factor(iw.dm.detects$period, levels = c("First", "Last"))
# iw.dm.detects$season <- factor(iw.dm.detects$season, levels = c("Winter", "Monsoon"))
# iw.dm.detects$sampling_year <- factor(iw.dm.detects$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
# iw.dm.detects$community <- factor(iw.dm.detects$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#
#
#pH and EC data----
#append pH and EC data
iw.pHec <- read_xlsx("/Users/gift/Documents/GitHub/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
#iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
# na.omit(iw.dm$community)
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
#ph EC summary ----
iw.pHec <- iw.dm[!is.na(iw.dm$pH),]
na.omit(iw.dm$pH)
iw.pHec <- iw.dm[!is.na(iw.dm$EC),]
na.omit(iw.dm$EC)
aggregate(iw.pHec$EC,
by = list(iw.pHec$season),
FUN = max)
median(iw.pHec$EC)
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
# iw.dm.detects.long <- pivot_longer(iw.dm.detects,
#                                    cols = Be:Pb,
#                                    values_to = "detection",
#                                    names_to = "analyte")
#
#
# iw.mlod.dm.long <- pivot_longer(iw.mlod.dm,
#                                 cols=Be:Pb,
#                                 values_to = "value",
#                                 names_to = "analyte")
#add proximity to point source ----
#com <- read_xlsx("/Users/gift/Documents/GitHub/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
#add proximity to cfactor dataframe
pli_dat3 <- full_join(pli_dat2, com, by = c("site"))
pli_dat3 <- pli_dat3[!is.na(pli_dat3$mlod.name),]
pli_dat4<- pivot_wider(pli_dat3,
values_from = "contamination_factor",
names_from= "analytes")
#add pollution load index ----
pli <- read.csv("/Users/gift/Documents/GitHub/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
#pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pli_contaminants
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
iw.dm <- iw.dm[-c(19,39),]
iw.dm <- iw.dm[iw.dm$site!="H222",]
#pli summary table====
table1(~ pli|community,
data=iw.dm,
overall=F)
table1(~pli|community+season,
data=iw.dm,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
kruskal.test(iw.dm$pli, iw.dm$community)
library(dunn.test)
dunn.test  (iw.dm$pli, g=iw.dm$community, kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05, altp=FALSE) #performs the posthoc test to see where the differences lie
ggplot(iw.dm, aes(x=community, y=pli,  fill=community)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Community") +
ylab(label = "Pollution Load Index") +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom") +
scale_y_continuous(limits = c(0,30))
ggplot(iw.dm, aes(x=community, y=pli,  fill=community)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Community") +
ylab(label = "Pollution Load Index") +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom") +
scale_y_continuous(limits = c(0,5))
kruskal.test(iw.dm$pli, iw.dm$season) #significant difference by season
dunn.test  (iw.dm$pli, g=iw.dm$season, kw=TRUE, label=TRUE,
wrap=FALSE, table=TRUE, list=FALSE, rmc=FALSE, alpha=0.05, altp=FALSE) #performs the posthoc test to see where the differences lie
ggplot(iw.dm, aes(x=season, y=pli,  fill=season)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Season") +
ylab(label = "Pollution Load Index") +
scale_fill_manual(values=c("purple", "darkgreen"))+
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom")+
scale_y_continuous(limits = c(0,30))
ggplot(iw.dm, aes(x=season, y=pli,  fill=season)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Season") +
ylab(label = "Pollution Load Index") +
scale_fill_manual(values=c("purple", "darkgreen"))+
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom")+
scale_y_continuous(limits = c(0,5))
#contamination factor=====
pli_dat<- pli[-c(19,39),]
pli_dat <- pli_dat[pli_dat$site!="H222",]
pli_short<-  pli_dat[, -c(15, 19, 25, 26, 28, 29)]
pli_dat2<- pivot_longer(pli_short,
cols = Be:Pb,
values_to = "contamination_factor",
names_to = "analytes")
table1(~contamination_factor|analytes+community,
data=pli_dat2,
render.continuous=c(.="Mean (sd)", .="Median [Min, Max]",
.="GMEAN (GSD)"))
ggplot(pli_dat2, aes(x=season, y=contamination_factor,  fill=analytes)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Season") +
ylab(label = "Contamination Factor") +
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom")+
scale_y_continuous(limits = c(0,5))
ggplot(pli_dat2, aes(x=community, y=contamination_factor,  fill=analytes)) +
stat_boxplot(geom ='errorbar') +
geom_boxplot()+
xlab(label = "Community") +
ylab(label = "Contamination Factor") +
theme_bw() +
theme(strip.text = element_blank(),
text = element_text(size=17, family = "Arial", face="bold"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.y = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
legend.title=element_text(size=14),
legend.text=element_text(size=14, face= "bold"),
legend.position = "bottom")+
scale_y_continuous(limits = c(0,5))
#
#cfactor modeling ----
cf_short<- pli_dat3[c(3, 5, 16, 17)]
View(cf_short)
cf_wider<- pivot_wider(cf_short,
names_from= analytes,
values_from= contamination_factor)
View(cf_wider)
cf_tucson<- cfwider[cf_wider$community=="Tucson"]
cf_tucson<- cf_wider[cf_wider$community=="Tucson"]
cf_tucson <- cf_wider[cf_wider$community="Tucson",]
cf_tucson<- cf_wider[cf_wider$community=="Tucson",]
View(cf_tucson)
#cfactor modeling ----
cf_short<- pli_dat3[c(3, 5, 15, 16, 17)]
cf_wider<- pivot_wider(cf_short,
names_from= analytes,
values_from= contamination_factor)
cf_tucson<- cf_wider[cf_wider$community=="Tucson",]
cft <- lmer(data = cf_tucson
pli_contaminants ~ (1|community:site),
cft <- lmer(data = cf_tucson,
pli_contaminants ~ (1|community:site),
REML = F)
View(cf_wider)
View(pli_dat3)
#cfactor modeling ----
cf_short<- pli_dat3[c(3, 4, 5, 15, 16, 17)]
cf_wider<- pivot_wider(cf_short,
names_from= analytes,
values_from= contamination_factor)
#cf for tucson====
cf_tucson<- cf_wider[cf_wider$community=="Tucson",]
cft <- lmer(data = cf_tucson,
pli_contaminants ~ (1|community:site),
REML = F)
cft0 <- lmer(data = cf_tucson,
pli_contaminants ~ (1|community:site),
REML = F)
summary(cft0)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn(1|community:site),
REML = F)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|community:site),
REML = F)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|community:site),
REML = T)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|community:site),
REML = T)
summary(cft1)
anova(cft1)
step(cft1 scope=list(lower=cft0), direction="both")
step(cft1, scope=list(lower=cft0), direction="both")
anova(cft1)
summary(cft1)
plot(cft1)
model.effects <- allEffects(cft1)
plot(model.effects)
vif(cft1)
r2(cft1)
#cf for hayden====
cf_hayden<- cf_wider[cf_wider$community=="Hayden",]
View(cf_tucson)
View(cf_wider)
#cf for hayden====
cf_hayden<- cf_wider[cf_wider$community=="Hayden/Winkelman",]
cfh0 <- lmer(data = cf_hayden,
pli_contaminants ~ (1|community:site),
REML = F)
summary(cfh0)
cfh1 <- lmer(data =cf_hayden,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|community:site),
REML = T)
step(cfh1, scope=list(lower=cfh0), direction="both")
anova(cfh1) #everything is signficant except arsenic
summary(cfh1)
summary(cfh1)
plot(cfh1)
model.effects <- allEffects(cft1)
step(cfh1, scope=list(lower=cfh0), direction="both")
(1 | community:site)
cfh1 <- lmer(data =cf_hayden,
pli_contaminants ~ Al + Mn + As + Pb + Cd + Be + Cr + Ni + Zn +
(1 | community:site),
REML= T)
cfh2 <- lmer(data =cf_hayden,
pli_contaminants ~ Al + Mn + As + Pb + Cd + Be + Cr + Ni + Zn +
(1 | community:site),
REML= T)
anova(cfh2) #be and Cu not significant
summary(cfh2)
plot(cfh2)
model.effects <- allEffects(cfh2)
plot(model.effects)
vif(cfh1)
cfh2 <- lmer(data =cf_hayden,
pli_contaminants ~ Al + Mn + As + Pb + Cd + Be + Cr + Ni +
(1 | community:site),
REML= T)
anova(cfh2) #be and Cu not significant
vif(cfh2)
cfh2 <- lmer(data =cf_hayden,
pli_contaminants ~ Al + Mn + As + Pb + Cd + Be + Cr + Ni + Zn +
(1 | community:site),
REML= T)
anova(cfh2) #be and Cu not significant
summary(cfh2)
plot(cfh2)
model.effects <- allEffects(cfh2)
plot(model.effects)
vif(cfh2)
r2(cfh2)
#cf for Dewey====
cf_Dewey<- cf_wider[cf_wider$community=="Dewey-Humboldt",]
#cf for Dewey====
cf_dewey<- cf_wider[cf_wider$community=="Dewey-Humboldt",]
cfd0 <- lmer(data = cf_dewey,
pli_contaminants ~ (1|community:site),
REML = F)
summary(cfd0)
cfd1 <- lmer(data =cf_dewey,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|community:site),
REML = T)
step(cfd1, scope=list(lower=cfd0), direction="both")
cfd2 <- lmer(data =cf_dewey,
pli_contaminants ~ Al + Mn + As +  Cd + Be + Cr + Zn +
(1 | community:site),
REML= T)
anova(cfd2) #be and Cu not significant
summary(cfd2)
plot(cfd2)
model.effects <- allEffects(cfd2)
plot(model.effects)
r2(cfd2)
cft0 <- lmer(data = cf_tucson,
pli_contaminants ~ (1|site),
REML = T)
summary(cft0)
cft0 <- lmer(data = cf_tucson,
pli_contaminants ~ (1|site),
REML = F)
summary(cft0)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = F)
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cft1, scope=list(lower=cft0), direction="both")
anova(cft1) #everything is signficant except arsenic
summary(cft1)
plot(cft1)
model.effects <- allEffects(cft1)
plot(model.effects)
vif(cft1)
r2(cft1)
#cf for hayden====
cf_hayden<- cf_wider[cf_wider$community=="Hayden/Winkelman",]
cfh0 <- lmer(data = cf_hayden,
pli_contaminants ~ (1|community:site),
REML = F)
cfh0 <- lmer(data = cf_hayden,
pli_contaminants ~ (1|site),
REML = F)
summary(cfh0)
cfh1 <- lmer(data =cf_hayden,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cfh1, scope=list(lower=cfh0), direction="both")
cfh2 <- lmer(data =cf_hayden,
pli_contaminants ~ Al + Mn + As + Pb + Cd + Be + Cr + Ni + Zn +
(1 | community:site),
REML= T)
anova(cfh2) #be and Cu not significant
summary(cfh2)
plot(cfh2)
model.effects <- allEffects(cfh2)
plot(model.effects)
r2(cfh2)
#cf for Dewey====
cf_dewey<- cf_wider[cf_wider$community=="Dewey-Humboldt",]
cfd0 <- lmer(data = cf_dewey,
pli_contaminants ~ (1|site),
REML = F)
summary(cfd0)
cfd1 <- lmer(data =cf_dewey,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cfd1, scope=list(lower=cfd0), direction="both")
cfd2 <- lmer(data =cf_dewey,
pli_contaminants ~ Al + Mn + As +  Cd + Be + Cr + Zn +
(1 | community:site),
REML= T)
cfd2 <- lmer(data =cf_dewey,
pli_contaminants ~ Al + Mn + As +  Cd + Be + Cr + Zn +
(1 |site),
REML= T)
anova(cfd2) #Ni and Pb not significant
summary(cfd2)
plot(cfd2)
model.effects <- allEffects(cfd2)
plot(model.effects)
r2(cfd2)
#cf for Globe====
cf_globe<- cf_wider[cf_wider$community=="Globe/Miami",]
cfd0 <- lmer(data = cf_globe,
pli_contaminants ~ (1|site),
REML = F)
summary(cfd0)
cfg0 <- lmer(data = cf_globe,
pli_contaminants ~ (1|site),
REML = F)
summary(cfg0)
step(cfg1, scope=list(lower=cfg0), direction="both")
cfg1 <- lmer(data =cf_globe,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cfg1, scope=list(lower=cfg0), direction="both")
cfg2 <- lmer(data =cf_globe,
pli_contaminants ~  Mn + Pb+  Cd + Be + Cr + Zn +
(1 |site),
REML= T)
anova(cfd2) #Ni and Pb not significant
anova(cfdg) #Ni and Pb not significant
anova(cfg2) #Ni and Pb not significant
plot(cfg2)
model.effects <- allEffects(cfd2)
model.effects <- allEffects(cfg2)
plot(model.effects)
r2(cfg2)
#cf full===
cf0 <- lmer(data = cf_wider,
pli_contaminants ~ (1|site),
REML = F)
summary(cf0)
cf1 <- lmer(data = cf_wider,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cf1, scope=list(lower=cf0), direction="both")
cft1 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+As+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
step(cft1, scope=list(lower=cft0), direction="both")
cft2 <- lmer(data = cf_tucson,
pli_contaminants ~
Al+Mn+Pb+Cu+Cd+Ba+Be+Cr+Ni+Zn+
(1|site),
REML = T)
anova(cft2) #everything is signficant except arsenic
summary(cft2)
plot(cft2)
model.effects <- allEffects(cft2)
plot(model.effects)
vif(cft2)
r2(cft2)
=======
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
#stat_sum(aes(size = ..n.., group = 1), position = "jitter",shape = 21) +
geom_jitter(aes(size = ..n.., group = 1),shape = 21, width = .25)+
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", width = .25, shape = 21) +
scale_fill_manual(values = wes_palette(name = "Darjeeling2", n = 4)) +
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_overall.png", res=300, height=10, width=7, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(season))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Counte\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
ggplot(ex.dat.long, mapping = aes(x = analyte, y = as.factor(exceedance), fill = as.factor(community))) +
stat_sum(aes(size = ..n.., group = 1), position = "jitter", shape = 21) +
scale_fill_manual(values=c("#F9A785", "#00A8C6", "#95CACA","#4068B2"))+
# #scale_fill_viridis_d() +
facet_grid(standard~analyte, scales = "free") +
labs(x = "\nAnalyte",
y = "Exceedance\n",
title = "Count of exceedances by analyte and available standards",
fill = "Community",
size = "Count")+
theme_bw() +
theme(text = element_text(family = "Avenir", size = 15),
plot.title = element_text(hjust=.5, face = "bold"),
plot.subtitle = element_text(hjust=.5),
axis.text = element_text(vjust = .5, color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position="right",
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_rect(fill = "white"),
axis.line.y = element_blank(),
axis.line.x = element_blank())
dev.print(png, "iw_exceedance_com.png", res=300, height=10, width=12, units="in")
#modeling ----
ex.dat.long.prox <- ex.dat.long %>%
drop_na(proximity.km)
aicu.0 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
aicu.1 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km,
family = "binomial")
summary(aicu.1)
vif(aicu.1)
library(car)
library(car)
vif(aicu.1)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F, k = log(n))
library(readxl)
=======
ic.dm <- read_xlsx("IC_DMTM_Y23.xlsx", sheet = "Corrected - DM", col_names = TRUE)
ic.dm$community <- "AZ-Background" #changes community to AZ background
#add period and season variables
ic.dm$period <- ic.dm$samplings
ic.dm$season <- ic.dm$samplings
#redefine them
ic.dm[ic.dm$period=="First Winter",]$period <- "First"
ic.dm[ic.dm$period=="Last Winter",]$period <- "Last"
ic.dm[ic.dm$period=="First Monsoon",]$period <- "First"
ic.dm[ic.dm$period=="Last Monsoon",]$period <- "Last"
ic.dm[ic.dm$season=="First Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="Last Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="First Monsoon",]$season <- "Monsoon"
ic.dm[ic.dm$season=="Last Monsoon",]$season <- "Monsoon"
ic.dm.new<- ic.dm[-c(2:10)]
attr.avg = colMeans(ic.dm, na.rm= TRUE)
attr.avg= print(sapply(ic.dm, mean))
attr.avg<- as.data.frame(attr.avg)
dat.long <- pivot_longer(data = iw.dm,
cols = Be:Pb,
names_to = "analyte",
values_to = "value")
View(iw.dm)
View(dat.long)
dat.long$Cf<- dat.long$analyte=="Be"/attr.avg$attr.avg=="Be",
dat.long$Cf<- dat.long$analyte=="Be"/attr.avg$attr.avg=="Be"
dat.long$Cf<- dat.long[dat.long$analyte=="Be"/attr.avg$attr.avg=="Be",
dat.long$Cf<- dat.long[(dat.long$analyte=="Be")/(attr.avg$attr.avg=="Be"),
dat.long$analyte=="Al"/attr.avg$attr.avg=="Al",
dat.long$Cf<- dat.long[dat.long$analyte=="Be",]/[attr.avg$attr.avg=="Be",]
dat.long$Cf<- dat.long[dat.long$analyte=="Be",]/[attr.avg$attr.avg=="Be",]
dat.long$Cf<- dat.long[dat.long$analyte=="Be",/attr.avg$attr.avg=="Be",]
dat.long$Cf<- dat.long[dat.long$analyte=="Be"/attr.avg$attr.avg=="Be"]
dat.long$Cf<- dat.long$Cf
dat.long$Cf<- dat.long$analyte== "Be"/ attr.avg$attr.avg== "Be"
dat.long$Cf<- dat.long$analyte="Be"/ attr.avg$attr.avg="Be"
attr.avg = colMeans(ic.dm, na.rm= TRUE)
ic.dm.new= print(sapply(ic.dm, mean))
dat.long <- pivot_longer(data = iw.dm,
cols = Be:Pb,
names_to = "analyte",
values_to = "value")
write.csv(dat.long, "iw.dm.extended")
write.csv(dat.long, "iw.dm.extended.csv")
?write.csv
write.table(dat.long, file= "iw.dm.extended.csv", col.names= TRUE, row.names=TRUE)
write.csv(dat.long, file= "iw.dm.extended.csv", col.names= TRUE, row.names=TRUE)
pi <- read_xlsx(iw.dm.extended.csv", col_names = TRUE)
pi <- read_xlsx(iw.dm.extended.csv", col_names = TRUE)
pi <- read_xlsx("iw.dm.extended.xlsx", col_names = TRUE)
pi <- read_xlsx("iw.dm.extended.xlsx", col_names = TRUE)
#set working directory
#setwd("/users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/data/data_processing")
setwd("/Users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/data/data_processing")
pi <- read_xlsx("iw.dm.extended.xlsx", col_names = TRUE)
pi_wider <- pivot_longer(data = pi,
cols = Be:Pb,
names_from = "analyte",
values_from = "value")
pi_wider <- pivot_longer(data = pi,
names_from = "analyte",
values_from = "value")
pi_wider <- pivot_wider(data = pi,
names_from = "analyte",
values_from = "value")
View(pi_wider)
?pivot_wider
pivot_wider(
pi,
names_from = "analyte",
names_repair = "check_unique",
values_from = "value",
values_fill = NULL,
values_fn = NULL,
unused_fn = NULL
)
pi_wider<-pivot_wider(
pi,
names_from = "analyte",
names_repair = "check_unique",
values_from = "value",
values_fill = NULL,
values_fn = NULL,
unused_fn = NULL
)
View(pi_wider)
pi<- na.omit(pi)
View(pi)
pi_wider<- na.omit(pi_wider)
View(pi_wider)
pi_wider<-pivot_wider(
pi,
names_from = "analyte",
names_repair = "check_unique",
values_from = "value",
values_fill = NULL,
values_fn = NULL,
unused_fn = NULL
)
pi%>%
tidyr::spread(key = "analyte",value = "value")
pi <- read_xlsx("iw.dm.extended.xlsx", col_names = TRUE)
pi_wider <- pivot_wider(data = pi,
names_from = "analyte",
values_from = "value")
pi_wider<-pivot_wider(
pi,
names_from = "analyte",
names_repair = "check_unique",
values_from = "value",
values_fill = NULL,
values_fn = NULL,
unused_fn = NULL
)
pi_wider<- pi%>%
tidyr::spread(key = "analyte",value = "value")
View(pi_wider)
pi_wider %>%
mutate(val = true) %>%
pivot_wider(names_from = "analyte",values_from = value,
values_fill = list(val = false))
pi_wider %>%
mutate(val = true) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list(val = false))
pi_wider %>%
mutate(val = true) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list("value "= false))
pi_wider %>%
mutate(value = true) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list(val = false))
pi_wider %>%
mutate(value = TRUE) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list(val = false))
pi_wider<- pi %>%
mutate(value = TRUE) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list(val = false))
pi_wider<- pi %>%
mutate(value = TRUE) %>%
pivot_wider(names_from = "analyte",
values_from = "value",
values_fill = list(val = FALSE))
cast_data = cast(pi, analyte~value)
>>>>>>> Stashed changes
library(MASS)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(aod)
library(wesanderson)
library(car)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F, k = log(n))
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
summary(aicu.2) #no significant community effect
vif(aicu.2)
# estimate the model and store results in m
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
require(ggplot2)
require(GGally)
library(readxl)
library(MASS)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(aod)
library(wesanderson)
library(car)
library(GGally)
library(reshape2)
<<<<<<< Updated upstream
library(lme4)
library(compiler)
library(parallel)
library(boot)
library(lattice)
# estimate the model and store results in m
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|commmunity:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.0)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.0)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|community:site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
summary(aicumm.1)
#get confidence intervals for estimates
se <- sqrt(diag(vcov(aicumm.1)))
# table of estimates with 95% CI
(tab <- cbind(Est = fixef(aicumm.1), LL = fixef(aicumm.1) - 1.96 * se, UL = fixef(aicumm.1) + 1.96 *
se))
exp(tab)
#null model
aicumm.0 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1 +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
#max model
aicumm.1 <- glmer(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km +
(1|site),
family = binomial, control = glmerControl(optimizer = "bobyqa"), nAGQ = 10)
aicumm.2 <- stepAIC(aicumm.0,scope = list(upper=aicumm.1), direction="both",test="Chisq", trace = F)
aicumm.2 <- step(aicumm.0,scope = list(upper=aicumm.1), direction="both",test="Chisq", trace = F)
aicumm.2 <- step(aicumm.1, direction="both", trace = F)
aicumm.2 <- stepAIC(aicumm.1, direction="both", trace = F)
aicumm.2 <- stepAIC(aicumm.1, direction="both", trace = F,
data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",])
anova(aicumm.1)
aod(aicumm.1)
#summary ----
#name subset columns
cols <- c("standard", "analyte")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_overall.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "season")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_ssn.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "community")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_com.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "site")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(n, exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
view(sumtable)
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_site.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "community")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_com.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte", "season")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_ssn.csv")
#summary ----
#name subset columns
cols <- c("standard", "analyte")
#calculate counts and percentages of the whole
sumtable <- ex.dat.long %>%
group_by(across(all_of(cols))) %>%
summarise(n = n(),
exceedances_n = sum(exceedance),
exceedances_freq = signif(sum(exceedance)/n()*100, 2))
sumtable.small <- subset(sumtable, select = -c(exceedances_n))
sumtable.wide <- pivot_wider(data = sumtable.small,
names_from = "standard",
values_from = "exceedances_freq")
view(sumtable.wide)
write.csv(sumtable.wide, "exceedance%_overall.csv")
##copper----
#null model
aicu.0 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ 1,
family = "binomial")
#maximal model
aicu.1 <- glm(data = ex.dat.long.prox[ex.dat.long.prox$standard=="AI"&ex.dat.long.prox$analyte=="Cu",],
exceedance ~ season+community+proximity.km+community:proximity.km,
family = "binomial")
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
summary(aicu.2) #no significant community effect
stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
aicu.2 <- step(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
step(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = F)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both",test="Chisq", trace = T)
aicu.2 <- stepAIC(aicu.0,scope = list(upper=aicu.1), direction="both", trace = T)
summary(aicu.2) #no significant community effect
>>>>>>> bd7265e52eb782daf8873b64ee82f17a2217591b
=======
library(reshape)
cast_data = cast(pi, analyte~value)
View(cast_data)
pi_wider <- pivot_wider(data = pi,
names_from = "analyte",
values_from = "value", "Cf")
pi <- read_xlsx("iw.dm.extended.xlsx", col_names = TRUE)
pi_wider <- pivot_wider(data = pi,
names_from = "analyte",
values_from = "value", "Cf")
View(pi)
pi_wider <- pivot_wider(data = pi,
names_from = "analyte",
values_from = "Cf")
View(pi_wider)
pi_short<- pi[c(2:6, 8, 10, 11, 12:14, 17, 17, 20)]
View(pi_short)
pi_wider <- pivot_wider(data = pi_short,
names_from = "analyte",
values_from = "Cf")
pi_short<- pi[c(2:6, 8, 10, 11, 12:14, 17, 18, 20)]
pi_wider <- pivot_wider(data = pi_short,
names_from = "analyte",
values_from = "Cf")
View(pi_short)
pi_short<- pi[c(2:6, 8, 10, 11, 12:14, 17, 20)]
pi_wider <- pivot_wider(data = pi_short,
names_from = "analyte",
values_from = "Cf")
View(pi_wider)
pi_wider$Pb)^(1/19)
)
pi_wider$Pb)^(1/19)
pi_wider$Pb)^(1/19))
pi_wider$pollution_index<- with (pi-wider, ((pi_wider$Be+
pi_wider$Al*
pi_wider$V*
pi_wider$Cr*
pi_wider$Mn*
pi_wider$Fe*
pi_wider$Co*
pi_wider$Ni*
pi_wider$Cu*
pi_wider$Zn*
pi_wider$As*
pi_wider$Se*
pi_wider$Mo*
pi_wider$Ag*
pi_wider$Cd*
pi_wider$Sn*
pi_wider$Sb*
pi_wider$Ba*
pi_wider$Pb)^(1/19)))
pi_wider$pollution_index<- with (pi-wider, ((pi_wider$Be*
pi_wider$Al*
pi_wider$V*
pi_wider$Cr*
pi_wider$Mn*
pi_wider$Fe*
pi_wider$Co*
pi_wider$Ni*
pi_wider$Cu*
pi_wider$Zn*
pi_wider$As*
pi_wider$Se*
pi_wider$Mo*
pi_wider$Ag*
pi_wider$Cd*
pi_wider$Sn*
pi_wider$Sb*
pi_wider$Ba*
pi_wider$Pb)^(1/19)))
pi_wider$pollution_index<- with (pi_wider, ((pi_wider$Be*
pi_wider$Al*
pi_wider$V*
pi_wider$Cr*
pi_wider$Mn*
pi_wider$Fe*
pi_wider$Co*
pi_wider$Ni*
pi_wider$Cu*
pi_wider$Zn*
pi_wider$As*
pi_wider$Se*
pi_wider$Mo*
pi_wider$Ag*
pi_wider$Cd*
pi_wider$Sn*
pi_wider$Sb*
pi_wider$Ba*
pi_wider$Pb)^(1/19)))
View(pi_wider)
write.csv(pi_wider, file= "pollution_load", col.names= TRUE, row.names=TRUE)
write.csv(pi_wider, file= "pollution_load.csv", col.names= TRUE, row.names=TRUE)
write.csv(pi_wider, file= "pollution_load.csv")
#load libraries----
library(car)
library(base64enc)
library(bayestestR)
library(EnvStats)
library(ggplot2)
library(ggeffects)
library(ggpubr)
library(htmltools)
library(googledrive)
library(lubridate)
library(lmerTest)
library(lme4)
library(performance)
library(rmarkdown)
library(rlang)
library(readxl)
library(readr)
library(stringr)
library(survey)
library(tidyverse)
library(tidyselect)
library(MASS, lib.loc = "/Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library")
#load libraries----
library(car)
library(tidyverse)
library(readxl)
library(tidyverse)
library(ggplot2)
library(EnvStats)
library(lme4)
library(lmerTest)
library(performance)
library(effects)
library(ggeffects)
library(ggpubr)
library(emmeans)
library(multcomp)
library(patchwork)
#set working directory----
#setwd("/users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/data/data_processing")
setwd("~/Documents/GitHub/ProjectHarvest/WorkingFiles//data/data_processing")
#set working directory----
setwd("/users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/data/data_processing")
#set working directory----
setwd("/users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/data/data_processing")
setwd("~/Documents/GitHub/ProjectHarvest/WorkingFiles//data/data_processing")
#set working directory----
setwd("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing")
#set working directory----
setwd("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing")
#setwd("~/Documents/GitHub/ProjectHarvest/WorkingFiles//data/data_processing")
#load data ----
ic.dm <- read_xlsx("IC_DMTM_Y23.xlsx", sheet = "Corrected - DM", col_names = TRUE)
ic.dm$community <- "AZ-Background" #changes community to AZ background
#add period and season variables
ic.dm$period <- ic.dm$samplings
ic.dm$season <- ic.dm$samplings
#redefine them
ic.dm[ic.dm$period=="First Winter",]$period <- "First"
ic.dm[ic.dm$period=="Last Winter",]$period <- "Last"
ic.dm[ic.dm$period=="First Monsoon",]$period <- "First"
ic.dm[ic.dm$period=="Last Monsoon",]$period <- "Last"
ic.dm[ic.dm$season=="First Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="Last Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="First Monsoon",]$season <- "Monsoon"
ic.dm[ic.dm$season=="Last Monsoon",]$season <- "Monsoon"
#combine water dm files together
dat <- bind_rows(iw.dm, ic.dm) #binds iw to ic
#define factors
dat$community <- factor(dat$community, levels = c("AZ-Background", "Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#dat$community <- factor(dat$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson", "Chiricahua", "Grand Canyon", "Oliver Knoll", "Organ Pipe", "Petrified Forest"))
dat$samplings <- factor(dat$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
dat$period <- factor(dat$period, levels = c("First", "Last"))
dat$season <- factor(dat$season, levels = c("Winter", "Monsoon"))
#load libraries ----
library(readxl) #read excel files
library(tidyverse)
library(ggplot2)
#load data ----
#IW DM
iw.dm <- read_excel("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected") #corrected mean the corrected tab in the excel sheet
#load data ----
#IW DM
iw.dm <- read_excel("/Users/Gift/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected") #corrected mean the corrected tab in the excel sheet
#load data ----
#IW DM
iw.dm <- read_excel("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_clean/IW_DM_Y123.xlsx", sheet = "Corrected") #corrected mean the corrected tab in the excel sheet
#wrangle data
#add period and season variables
iw.dm$period <- iw.dm$samplings
iw.dm$season <- iw.dm$samplings
#redefine them
iw.dm[iw.dm$period=="First Winter",]$period <- "First"
iw.dm[iw.dm$period=="Last Winter",]$period <- "Last"
iw.dm[iw.dm$period=="First Monsoon",]$period <- "First"
iw.dm[iw.dm$period=="Last Monsoon",]$period <- "Last"
iw.dm[iw.dm$season=="First Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="Last Winter",]$season <- "Winter"
iw.dm[iw.dm$season=="First Monsoon",]$season <- "Monsoon"
iw.dm[iw.dm$season=="Last Monsoon",]$season <- "Monsoon"
iw.dm$year <- iw.dm$sampling_year
iw.dm[iw.dm$year=="2017-2018",]$year <- "Water Year 1"
iw.dm[iw.dm$year=="2018-2019",]$year <- "Water Year 2"
iw.dm[iw.dm$year=="2019-2020",]$year <- "Water Year 3"
#remove field blanks. to remove anything, type !="Value" to remove them.
iw.dm <- iw.dm[iw.dm$type!="B", ]
#remove ATS samples because ATS samples are not included in PH research.
iw.dm <- iw.dm[iw.dm$site!="ATS1", ]
#remove year 3 monsoon samples
iw.dm$ssnyear <- paste(iw.dm$season, iw.dm$year)
iw.dm <- iw.dm[iw.dm$ssnyear!="Monsoon Water Year 3", ]
#confirm correct order of categorical variables
#iw.dm$samplings <- factor(iw.dm$samplings, levels = c("FW", "LW", "FM", "LM"))
iw.dm$samplings <- factor(iw.dm$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
iw.dm$period <- factor(iw.dm$period, levels = c("First", "Last"))
iw.dm$season <- factor(iw.dm$season, levels = c("Winter", "Monsoon"))
iw.dm$sampling_year <- factor(iw.dm$sampling_year, levels = c("Water Year 1", "Water Year 2", "Water Year 3"))
iw.dm$community <- factor(iw.dm$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#pH and EC data
#append pH and EC data
iw.pHec <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
#ph EC summary ----
iw.pHec <- iw.dm[!is.na(iw.dm$pH),]
na.omit(iw.dm$pH)
iw.pHec <- iw.dm[!is.na(iw.dm$EC),]
na.omit(iw.dm$EC)
aggregate(iw.pHec$EC,
by = list(iw.pHec$season),
FUN = max)
#pH and EC data
#append pH and EC data
iw.pHec <- read_xlsx("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_clean/IW_pHEC_Y123.xlsx", sheet = 1, col_names = TRUE)
iw.pHec <- iw.pHec[iw.pHec$type!="B",] #removing field blanks
iw.dm <- full_join(iw.dm, iw.pHec, by = c("sample.name", "type")) #joins the phec data with the original iw.dm we had before
iw.dm <- iw.dm[!is.na(iw.dm$community),]
#add mining community vs urban community
iw.dm$landuse <- "Mining Community"
iw.dm[iw.dm$community=="Tucson",]$landuse <- "Urban Community"
#ph EC summary ----
iw.pHec <- iw.dm[!is.na(iw.dm$pH),]
na.omit(iw.dm$pH)
iw.pHec <- iw.dm[!is.na(iw.dm$EC),]
na.omit(iw.dm$EC)
aggregate(iw.pHec$EC,
by = list(iw.pHec$season),
FUN = max)
median(iw.pHec$EC)
#longer ----
iw.dm.long <- pivot_longer(iw.dm,
cols = Be:Pb,
values_to = "value",
names_to = "analyte")
haydendat <- haydendat[haydendat$site!="H222",]
#add pollution load index ----
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pollution_index_selected_analytes
#add proximity to point source ----
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
comdat <- comdat[comdat$site!="H222",]
#reset working directory for figures ----
setwd("/users/godsgiftnkechichukwuonye/Documents/GitHub/WorkingFiles/Figures")
setwd("~/Documents/GitHub/project-harvest-fork/Figures")
#Scratch? All Elements ----
Contamlist <- c("Al", "Sb", "As", "Ba", "Be", "Cd", "Cr", "Co", "Cu", "Fe", "Pb", "Mn", "Mo", "Ni", "Se", "Ag", "Sn", "V", "Zn")
View(iw.dm)
#add pollution load index ----
pli <- read.csv("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
#add pollution load index ----
pli <- read.csv("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing/pollution_load_selected_analytes.csv")
iw.dm$pli <- pli$pollution_index_selected_analytes
#add proximity to point source ----
com <- read_xlsx("~/Documents/GitHub/ProjectHarvest/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
#add proximity to point source ----
com <- read_xlsx("~/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
#add proximity to point source ----
com <- read_xlsx("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
#add proximity to point source ----
com <- read_xlsx("/Users/Gift/Documents/GitHub/WorkingFiles/data/data_processing/LATLOGSITE.xlsx", sheet = "community", col_names = TRUE)
iw.dm <- full_join(iw.dm, com, by = c("site"))
iw.dm <- iw.dm[!is.na(iw.dm$mlod.name),]
#outliers ----
#remove samples 19 and 39 from analysis because they were outliers based on MFA and remove all samples from H22 because they are a proximity outlier south of Winkelman
#G428IWA23-20190730 and H209IWA23-20190709
comdat <- comdat[comdat$site!="H222",]
View(iw.dm)
#setwd("~/Documents/GitHub/ProjectHarvest/WorkingFiles//data/data_processing")
#load data ----
ic.dm <- read_xlsx("IC_DMTM_Y23.xlsx", sheet = "Corrected - DM", col_names = TRUE)
ic.dm$community <- "AZ-Background" #changes community to AZ background
#add period and season variables
ic.dm$period <- ic.dm$samplings
ic.dm$season <- ic.dm$samplings
#redefine them
ic.dm[ic.dm$period=="First Winter",]$period <- "First"
ic.dm[ic.dm$period=="Last Winter",]$period <- "Last"
ic.dm[ic.dm$period=="First Monsoon",]$period <- "First"
ic.dm[ic.dm$period=="Last Monsoon",]$period <- "Last"
ic.dm[ic.dm$season=="First Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="Last Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="First Monsoon",]$season <- "Monsoon"
ic.dm[ic.dm$season=="Last Monsoon",]$season <- "Monsoon"
#combine water dm files together
dat <- bind_rows(iw.dm, ic.dm) #binds iw to ic
#define factors
dat$community <- factor(dat$community, levels = c("AZ-Background", "Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#dat$community <- factor(dat$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson", "Chiricahua", "Grand Canyon", "Oliver Knoll", "Organ Pipe", "Petrified Forest"))
dat$samplings <- factor(dat$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
dat$period <- factor(dat$period, levels = c("First", "Last"))
dat$season <- factor(dat$season, levels = c("Winter", "Monsoon"))
dat.long <- pivot_longer(data = dat,
cols = Be:Pb,
names_to = "analyte",
values_to = "value")
setwd("/users/godsgiftnkechichukwuonye/Desktop/PhD Stuff/PH_Figures")
setwd("~/Documents/GitHub/project-harvest-GC/Figures")
pli.summary <- comdat %>%
group_by(season, community) %>%
summarise(mean = mean(na.omit(pli)))
view(pli.summary)
view(pli.summary)
#add period and season variables
ic.dm$period <- ic.dm$samplings
ic.dm$season <- ic.dm$samplings
#redefine them
ic.dm[ic.dm$period=="First Winter",]$period <- "First"
ic.dm[ic.dm$period=="Last Winter",]$period <- "Last"
ic.dm[ic.dm$period=="First Monsoon",]$period <- "First"
ic.dm[ic.dm$period=="Last Monsoon",]$period <- "Last"
ic.dm[ic.dm$season=="First Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="Last Winter",]$season <- "Winter"
ic.dm[ic.dm$season=="First Monsoon",]$season <- "Monsoon"
ic.dm[ic.dm$season=="Last Monsoon",]$season <- "Monsoon"
#combine water dm files together
dat <- bind_rows(iw.dm, ic.dm) #binds iw to ic
#define factors
dat$community <- factor(dat$community, levels = c("AZ-Background", "Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson"))
#dat$community <- factor(dat$community, levels = c("Dewey-Humboldt", "Globe/Miami", "Hayden/Winkelman", "Tucson", "Chiricahua", "Grand Canyon", "Oliver Knoll", "Organ Pipe", "Petrified Forest"))
dat$samplings <- factor(dat$samplings, levels = c("First Winter", "Last Winter", "First Monsoon", "Last Monsoon"))
dat$period <- factor(dat$period, levels = c("First", "Last"))
dat$season <- factor(dat$season, levels = c("Winter", "Monsoon"))
dat.long <- pivot_longer(data = dat,
cols = Be:Pb,
names_to = "analyte",
values_to = "value")
setwd("/users/godsgiftnkechichukwuonye/Desktop/PhD Stuff/PH_Figures")
setwd("/Users/Gift/Documents/GitHub/WorkingFilesFigures")
setwd("~/Documents/GitHub/project-harvest-GC/Figures")
setwd("/Users/Gift/Documents/GitHub/WorkingFiles/Figures")
pli.summary <- comdat %>%
group_by(season, community) %>%
summarise(mean = mean(na.omit(pli)))
>>>>>>> Stashed changes
